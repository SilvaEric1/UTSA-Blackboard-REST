{
  "swagger": "2.0",
  "info": {
    "version": "3900.48.0",
    "title": "Learn APIs"
  },
  "host": "utsa-stage.blackboard.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "basic": {
      "description": "The application key and secret, encoded using RFC 2617 Basic authentication.",
      "type": "basic"
    },
    "bearer": {
      "description": "OAuth2 bearer token, obtained by sending a client_credentials grant request to /learn/api/public/v1/oauth2/token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "paths": {
    "/learn/api/public/v1/oauth2/authorizationcode": {
      "get": {
        "tags": [
          "oauth"
        ],
        "summary": "Authorization Code",
        "description": "Requests an OAuth 2 authorization code. Use of PKCE standard is optional, but highly recommended.\n\n**Since**: 3200.7.0",
        "parameters": [
          {
            "$ref": "#/parameters/OAuth2AuthorizationCodeRequestParam.redirect_uri"
          },
          {
            "$ref": "#/parameters/OAuth2AuthorizationCodeRequestParam.response_type"
          },
          {
            "$ref": "#/parameters/OAuth2AuthorizationCodeRequestParam.client_id"
          },
          {
            "$ref": "#/parameters/OAuth2AuthorizationCodeRequestParam.scope"
          },
          {
            "$ref": "#/parameters/OAuth2AuthorizationCodeRequestParam.state"
          },
          {
            "name": "code_challenge",
            "in": "query",
            "description": "A code challenge to verify credentials along with the granted authorization code. It is used with the PKCE standard.\n\n**Since**: 3700.4.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "code_challenge_method",
            "in": "query",
            "description": "This is the method used to verify the code challenge using the PKCE standard. Blackboard only supports s256 as the code challenge method.\n\n**Since**: 3700.4.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "one_time_session_token",
            "in": "query",
            "description": "Token used to retrieve the session that generated this Oauth2 Code request. Used when session cookies are not sent due to privacy settings of the browser.\n\n**Since**: 3900.13.0",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/learn/api/public/v1/oauth2/token": {
      "post": {
        "tags": [
          "oauth"
        ],
        "summary": "Request Token",
        "description": "Requests an OAuth 2 access token.\n\n**Since**: 2015.11.0",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/OAuth2AccessTokenRequestParam.grant_type"
          },
          {
            "$ref": "#/parameters/OAuth2AccessTokenRequestParam.code"
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "The redirectUri to send the end user to once an access token response is made in Oauth2 Authorization Code Workflow\n\n**Since**: 3200.7.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "refresh_token",
            "in": "query",
            "description": "The refresh token granted for use by an application in Oauth2 Refresh Token Workflow\n\n**Since**: 3200.7.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "code_verifier",
            "in": "query",
            "description": "The code_verifier to be passed along with authorization code if PKCE standard was used to grant the authorization code.\n\n**Since**: 3700.4.0",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AccessToken"
            }
          },
          "400": {
            "description": "Invalid access token request.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "401": {
            "description": "Invalid client credentials, or no access granted to this Learn server.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/learn/api/public/v1/oauth2/tokeninfo": {
      "get": {
        "tags": [
          "oauth"
        ],
        "summary": "Get Token Info",
        "description": "Requests an OAuth 2 access token info.\n\n**Since**: 3700.6.0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "The application key and secret, encoded using RFC 2617 Basic authentication.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AccessTokenInfo"
            }
          },
          "400": {
            "description": "Invalid access token request.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        }
      }
    },
    "/learn/api/public/v1/announcements": {
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcements",
        "description": "Return a list of System Announcements. Users with the 'system.announcements.VIEW' entitlement can view 'available' System Announcements. Users with the 'system.announcements.admin.VIEW' entitlement can view 'available' & 'unavailable' System Announcements.\n\n**Since**: 3100.7.0",
        "parameters": [
          {
            "$ref": "#/parameters/RowBasedPagingParams.offset"
          },
          {
            "$ref": "#/parameters/RowBasedPagingParams.limit"
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                },
                "paging": {
                  "$ref": "#/definitions/PagingInfo"
                }
              },
              "required": [
                "results"
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          }
        }
      },
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Create Announcement",
        "description": "Create a System Announcement. Users with the 'system.announcements.CREATE' entitlement can create System Announcements.\n\n**Since**: 3100.7.0",
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of this System Announcement."
                },
                "body": {
                  "type": "string",
                  "format": "BbML",
                  "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
                  "description": "The message body of the System Announcement. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
                },
                "availability": {
                  "type": "object",
                  "description": "Settings controlling availability of the System Announcement.",
                  "title": "Availability",
                  "properties": {
                    "duration": {
                      "type": "object",
                      "description": "Duration indicates when the System Announcement is Available based on whether it is Permanent or if the date/time of the request falls within its Start & End dates.",
                      "title": "Duration",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Indicates whether this System Announcement is always displayed (Permanent) or if it is shown only between the Start and End dates (Restricted).\n\n\n| Type      | Description\n | --------- | --------- |\n| Permanent | The Announcement will always be displayed. |\n| Restricted | The Announcement will start being displayed on Duration.Start and stop being displayed on Duration.End |\n",
                          "enum": [
                            "Permanent",
                            "Restricted"
                          ]
                        },
                        "start": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date this Announcement starts being Available."
                        },
                        "end": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date this Announcement stops being Available."
                        }
                      }
                    }
                  }
                },
                "showAtLogin": {
                  "type": "boolean",
                  "description": "Whether this System Announcement should be displayed on the login page."
                },
                "showInCourses": {
                  "type": "boolean",
                  "description": "Whether this System Announcement should be displayed on courses."
                }
              }
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Announcement"
            }
          },
          "400": {
            "description": "The request did not specify valid data",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "403": {
            "description": "The user does not have entitlements to create announcements",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          }
        }
      }
    },
    "/learn/api/public/v1/announcements/{announcementId}": {
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement",
        "description": "Get a System Announcement. Users with the 'system.announcements.VIEW' entitlement can view 'available' System Announcements. Users with the 'system.announcements.admin.VIEW' entitlement can view 'available' & 'unavailable' System Announcements.\n\n**Since**: 3100.7.0",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Announcement"
            }
          },
          "403": {
            "description": "The currently authenticated user has insufficient privileges to update an announcement",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "404": {
            "description": "Announcement cannot be found",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Delete Announcement",
        "description": "Delete a System Announcement. Users with the 'system.announcements.DELETE' entitlement can delete System Announcements.\n\n**Since**: 3100.7.0",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "An error occurred while deleting an announcement",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "403": {
            "description": "The currently authenticated user has insufficient privileges to delete an announcement",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "404": {
            "description": "Announcement cannot be found",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "announcements"
        ],
        "summary": "Update Announcement",
        "description": "Update a System Announcement. Users with the 'system.announcements.MODIFY' entitlement can update System Announcements.\n\n**Since**: 3100.7.0",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "input",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of this System Announcement."
                },
                "body": {
                  "type": "string",
                  "format": "BbML",
                  "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
                  "description": "The message body of the System Announcement. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
                },
                "availability": {
                  "type": "object",
                  "description": "Settings controlling availability of the System Announcement.",
                  "title": "Availability",
                  "properties": {
                    "duration": {
                      "type": "object",
                      "description": "Duration indicates when the System Announcement is Available based on whether it is Permanent or if the date/time of the request falls within its Start & End dates.",
                      "title": "Duration",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Indicates whether this System Announcement is always displayed (Permanent) or if it is shown only between the Start and End dates (Restricted).\n\n\n| Type      | Description\n | --------- | --------- |\n| Permanent | The Announcement will always be displayed. |\n| Restricted | The Announcement will start being displayed on Duration.Start and stop being displayed on Duration.End |\n",
                          "enum": [
                            "Permanent",
                            "Restricted"
                          ]
                        },
                        "start": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date this Announcement starts being Available."
                        },
                        "end": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date this Announcement stops being Available."
                        }
                      }
                    }
                  }
                },
                "showAtLogin": {
                  "type": "boolean",
                  "description": "Whether this System Announcement should be displayed on the login page."
                },
                "showInCourses": {
                  "type": "boolean",
                  "description": "Whether this System Announcement should be displayed on courses."
                }
              }
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Announcement"
            }
          },
          "400": {
            "description": "Invalid request data found while updating an announcement",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "403": {
            "description": "The currently authenticated user has insufficient privileges to update an announcement",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          },
          "404": {
            "description": "Announcement cannot be found",
            "schema": {
              "$ref": "#/definitions/RestException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AdaptiveReleaseACLGroupPredicate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Criterion-Group association ID.",
          "readOnly": true
        },
        "criterionId": {
          "type": "string",
          "description": "The Criterion ID.",
          "readOnly": true
        },
        "groupId": {
          "type": "string",
          "description": "The Group ID.",
          "readOnly": true
        }
      }
    },
    "AdaptiveReleaseACLUserPredicate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Criterion-User association ID.",
          "readOnly": true
        },
        "criterionId": {
          "type": "string",
          "description": "The Criterion ID.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The User ID.",
          "readOnly": true
        }
      }
    },
    "AdaptiveReleaseRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Rule item identifier that indicates the id of the rule item source which the item was created from. (Ex. '_48_1')",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title given to the adaptive release rule",
          "maxLength": 100
        }
      }
    },
    "AdaptiveReleaseRuleCriteria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Internal Identifier of the Rule's criteria.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The Type of the Criterion.\n\n\n| Type      | Description\n | --------- | --------- |\n| GradeRange |  |\n| GradePercentage |  |\n| DateRange |  |\n| Memberships |  |\n| ContentComplete |  |\n| GradeCompleted |  |\n| ContentReviewed |  |\n",
          "enum": [
            "GradeRange",
            "GradePercentage",
            "DateRange",
            "Memberships",
            "ContentComplete",
            "GradeCompleted",
            "ContentReviewed"
          ]
        }
      }
    },
    "AggregateReviewStatus": {
      "type": "object",
      "properties": {
        "courseId": {
          "type": "string",
          "description": "The ID of the course.\n\n**Since**: 3700.15.0"
        },
        "userId": {
          "type": "string",
          "description": "The ID of the User.\n\n**Since**: 3700.15.0"
        },
        "reviewedCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of content items the user has reviewed.\n\n**Since**: 3700.15.0"
        },
        "reviewableCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of content items that can be reviewed in the given course.\n\n**Since**: 3700.15.0"
        }
      }
    },
    "Announcement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Primary key identifier",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of this System Announcement."
        },
        "body": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The message body of the System Announcement. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the System Announcement.",
          "title": "Availability",
          "properties": {
            "duration": {
              "type": "object",
              "description": "Duration indicates when the System Announcement is Available based on whether it is Permanent or if the date/time of the request falls within its Start & End dates.",
              "title": "Duration",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Indicates whether this System Announcement is always displayed (Permanent) or if it is shown only between the Start and End dates (Restricted).\n\n\n| Type      | Description\n | --------- | --------- |\n| Permanent | The Announcement will always be displayed. |\n| Restricted | The Announcement will start being displayed on Duration.Start and stop being displayed on Duration.End |\n",
                  "enum": [
                    "Permanent",
                    "Restricted"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this Announcement starts being Available."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this Announcement stops being Available."
                }
              }
            }
          }
        },
        "showAtLogin": {
          "type": "boolean",
          "description": "Whether this System Announcement should be displayed on the login page."
        },
        "showInCourses": {
          "type": "boolean",
          "description": "Whether this System Announcement should be displayed on courses."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the System Announcement was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Attempt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID for this attempt.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with this attempt.",
          "readOnly": true
        },
        "groupAttemptId": {
          "type": "string",
          "description": "The group attempt ID associated with this student attempt.",
          "readOnly": true
        },
        "groupOverride": {
          "type": "boolean",
          "description": "Whether the score associated with this student attempt was overridden from the associated group attempt score. A value is only returned if the attempt grade is currently overridden.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of this attempt.\n\n\n| Type      | Description\n | --------- | --------- |\n| NotAttempted | none of the students in a group has submitted an attempt; applies only to group assessments |\n| Abandoned |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| InProgress | attempt activity has commenced, but has not been submitted for grading |\n| Suspended |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| Canceled |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| NeedsGrading | attempt has been submitted for grading, but has not been fully graded |\n| Completed | a grade has been entered for the attempt |\n| InProgressAgain | attempt has been graded, but more student activity occurred after the grade was entered; applies only to collaborative tools such as discussions |\n| NeedsGradingAgain | additional student activity occurring after a grade was entered requires that the attempt be regraded; applies only to collaborative tools such as discussions |\n",
          "enum": [
            "NotAttempted",
            "Abandoned",
            "InProgress",
            "Suspended",
            "Canceled",
            "NeedsGrading",
            "Completed",
            "InProgressAgain",
            "NeedsGradingAgain"
          ]
        },
        "text": {
          "type": "string",
          "description": "The text representation of grade for this attempt."
        },
        "score": {
          "type": "number",
          "description": "The score associated with this attempt."
        },
        "notes": {
          "type": "string",
          "description": "The instructor notes associated with this attempt."
        },
        "feedback": {
          "type": "string",
          "description": "The instructor feedback associated with this attempt."
        },
        "studentComments": {
          "type": "string",
          "description": "The student comments associated with this attempt."
        },
        "studentSubmission": {
          "type": "string",
          "description": "The student submission text associated with this attempt."
        },
        "exempt": {
          "type": "boolean",
          "description": "Whether the score associated with this attempt is ignored when computing the user's grade for the associated grade column."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which this attempt was created.",
          "readOnly": true
        }
      }
    },
    "AttemptFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary key of the file attachment.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the file which has been attached to an Attempt including the file extension."
        },
        "viewUrl": {
          "type": "string",
          "description": "If Learn has a registered viewer for the file, this will be a URL for that viewer to render the file. This may not be populated depending on multiple factors including but not limited to Learn configuration, file type, and viewer provider.",
          "readOnly": true
        }
      }
    },
    "AttemptReceipt": {
      "type": "object",
      "properties": {
        "receiptId": {
          "type": "string",
          "description": "The ID of the receipt.",
          "readOnly": true
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the associated attempt was submitted.",
          "readOnly": true
        },
        "submissionTotalSize": {
          "type": "integer",
          "format": "int64",
          "description": "The total size of the submission in bytes\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "The related course id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "gradableItemId": {
          "type": "string",
          "description": "The related gradable item id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "attemptId": {
          "type": "string",
          "description": "The related attempt id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The related submitter user id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "groupAttemptId": {
          "type": "string",
          "description": "The related group attempt id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "groupId": {
          "type": "string",
          "description": "The related group id\n\n**Since**: 3900.37.0",
          "readOnly": true
        },
        "responseStatus": {
          "type": "string",
          "description": "The associated response status\n\n**Since**: 3900.37.0\n\n\n| Type      | Description\n | --------- | --------- |\n| ReceiptAndAttemptExist | Both the attempt receipt and the related attempt exist and there is access to both. |\n| ReceiptExistsButAttemptDoesNot | The attempt receipt exist but the attempt was deleted and there is access to the attempt receipt through the course context. |\n| ReceiptExistsNoAccessToAttempt | The attempt receipt exists but there is no access to the attempt. |\n| ReceiptExistsColumnSoftDeleted | The attempt receipt exists but the column was deleted. |\n",
          "readOnly": true,
          "enum": [
            "ReceiptAndAttemptExist",
            "ReceiptExistsButAttemptDoesNot",
            "ReceiptExistsNoAccessToAttempt",
            "ReceiptExistsColumnSoftDeleted"
          ]
        }
      }
    },
    "AttemptV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID for this attempt.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with this attempt.  Defaults to the authenticated user on create.  Can be specified as a user other than the authenticated user if the authenticated user has the \"course.gradebook.MODIFY\" entitlement and the authenticated application has the \"course.attempt.nonowner.SUBMIT\" entitlement.",
          "readOnly": true
        },
        "groupAttemptId": {
          "type": "string",
          "description": "The group attempt ID associated with this student attempt.",
          "readOnly": true
        },
        "groupOverride": {
          "type": "boolean",
          "description": "Whether the score associated with this student attempt was overridden from the associated group attempt score. A value is only returned if the attempt grade is currently overridden.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of this attempt.\n\n\n| Type      | Description\n | --------- | --------- |\n| NotAttempted | none of the students in a group has submitted an attempt; applies only to group assessments |\n| Abandoned |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| InProgress | attempt activity has commenced, but has not been submitted for grading |\n| Suspended |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| Canceled |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |\n| NeedsGrading | attempt has been submitted for grading, but has not been fully graded |\n| Completed | a grade has been entered for the attempt |\n| InProgressAgain | attempt has been graded, but more student activity occurred after the grade was entered; applies only to collaborative tools such as discussions |\n| NeedsGradingAgain | additional student activity occurring after a grade was entered requires that the attempt be regraded; applies only to collaborative tools such as discussions |\n",
          "enum": [
            "NotAttempted",
            "Abandoned",
            "InProgress",
            "Suspended",
            "Canceled",
            "NeedsGrading",
            "Completed",
            "InProgressAgain",
            "NeedsGradingAgain"
          ]
        },
        "displayGrade": {
          "description": "The display grade associated with this attempt.",
          "$ref": "#/definitions/DisplayGrade"
        },
        "text": {
          "type": "string",
          "description": "The text grade associated with this attempt."
        },
        "score": {
          "type": "number",
          "description": "The score associated with this attempt."
        },
        "reconciliationMode": {
          "type": "string",
          "description": "The reconciliation mode to use when reconciling the attempt grade.  When modifying reconciliationMode, score is also required.  A new score will not be calculated based on the reconciliationMode\n\n**Since**: 3700.2.0\n\n\n| Type      | Description\n | --------- | --------- |\n| Average |  |\n| Highest |  |\n| Lowest |  |\n| Custom |  |\n",
          "enum": [
            "Average",
            "Highest",
            "Lowest",
            "Custom"
          ]
        },
        "notes": {
          "type": "string",
          "description": "The instructor notes associated with this attempt."
        },
        "feedback": {
          "type": "string",
          "description": "The instructor feedback associated with this attempt."
        },
        "studentComments": {
          "type": "string",
          "description": "The student comments associated with this attempt."
        },
        "studentSubmission": {
          "type": "string",
          "description": "The student submission text associated with this attempt."
        },
        "exempt": {
          "type": "boolean",
          "description": "Whether the score associated with this attempt is ignored when computing the user's grade for the associated grade column."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which this attempt was created.",
          "readOnly": true
        },
        "attemptDate": {
          "type": "string",
          "format": "date-time",
          "description": "Return the attempt date associated with this attempt.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the attempt was modified.\n\n**Since**: 3800.0.0",
          "readOnly": true
        },
        "attemptReceipt": {
          "description": "The attempt receipt associated with this attempt.\n\n**Since**: 3900.22.0",
          "$ref": "#/definitions/EmbeddedAttemptReceipt"
        }
      }
    },
    "AttendanceDataDownloadUrl": {
      "type": "object",
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "The download url of attendance data file."
        }
      }
    },
    "AttendanceRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The primary ID of the attendance record.",
          "readOnly": true
        },
        "meetingId": {
          "type": "string",
          "description": "The primary id of the meeting."
        },
        "userId": {
          "type": "string",
          "description": "The learn external id of the user."
        },
        "status": {
          "type": "string",
          "description": "The attendance status of the user.\n\n\n| Type      | Description\n | --------- | --------- |\n| Absent |  |\n| Late |  |\n| Present |  |\n| Excused |  |\n",
          "enum": [
            "Absent",
            "Late",
            "Present",
            "Excused"
          ]
        }
      }
    },
    "Availability": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string",
          "description": "null\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n| Disabled |   **Since**: 3100.0.0 |\n",
          "enum": [
            "Yes",
            "No",
            "Disabled"
          ]
        }
      }
    },
    "BYDAYEnum": {
      "type": "string",
      "properties": {},
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "Calendar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Calendar id. Valid ids are: \"PERSONAL\", \"INSTITUTION\", and course id in the format of \"_3_1\".",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Calendar name.",
          "readOnly": true
        }
      }
    },
    "CalendarItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Calendar item identifier that indicates the id of the calendar item source which the item was created from. (Ex. '_417_1')",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of this Calendar Item.\n\n\n| Type      | Description\n | --------- | --------- |\n| Course |  |\n| GradebookColumn | Read only. |\n| Institution |  |\n| OfficeHours |  |\n| Personal |  |\n",
          "readOnly": true,
          "enum": [
            "Course",
            "GradebookColumn",
            "Institution",
            "OfficeHours",
            "Personal"
          ]
        },
        "calendarId": {
          "type": "string",
          "description": "Calendar source identifier which indicates the calendar on which the calendar item was created. Examples of possible values : \"PERSONAL\", \"INSTITUTION\", and course id in the format of \"_3_1\".",
          "readOnly": true
        },
        "calendarName": {
          "type": "string",
          "description": "Calendar source label/display name.",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title of the calendar item. Title length cannot exceed 255 characters."
        },
        "description": {
          "type": "string",
          "description": "Description of the calendar item."
        },
        "location": {
          "type": "string",
          "description": "Location of the calendar item and it cannot exceed 1024 characters."
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "Start date of the calendar item either in the past if the calendar item is for an event that's already started OR in the future if it's for an event to start in the future. This is always set and should occur before the end date."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "End date of the calendar item either in the past if the calendar item is for an event that's already end OR in the future if it's for an event to end in the future. This is always set and should occur after the start date."
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the calendar item was last modified.",
          "readOnly": true
        },
        "color": {
          "type": "string",
          "description": "Color to use for the calendar item. It's a shared setting for all calendar items with the same calendar source identifier.",
          "readOnly": true
        },
        "disableResizing": {
          "type": "boolean",
          "description": "Whether resizing of the calendar item should NOT be allowed."
        },
        "createdByUserId": {
          "type": "string",
          "description": "Get the user who created this calendar item. This will be null for non-personal events when the creator has been deleted.",
          "readOnly": true
        },
        "dynamicCalendarItemProps": {
          "type": "object",
          "description": "Extra calendar item properties if it is a GradebookColumn calendar item.",
          "title": "DynamicCalendarItemProps",
          "readOnly": true,
          "properties": {
            "attemptable": {
              "type": "boolean",
              "description": "The dynamic calendar item can be attempted (can have attempts made against it) and the current user (in context) has permission/entitlement to grade attempts for the object represented by this calendar item."
            },
            "categoryId": {
              "type": "string",
              "description": "Returns the gradeableItem categoryId value .it is only set if the calendar event is dynamically created based on a single grade book column"
            },
            "dateRangeLimited": {
              "type": "boolean",
              "description": "The dynamic calendar item is only visible during a specific windows of time."
            },
            "eventType": {
              "type": "string",
              "description": "Returns a human readable string describing the type of calendar item represented (e.g. assignment, test, etc.)."
            },
            "gradable": {
              "type": "boolean",
              "description": "The dynamic calendar item can be graded and the current user (in context) has permission/entitlement to grade attempts for the object represented by this calendar item."
            }
          }
        },
        "recurrence": {
          "description": "Recurring definition if the calendar item is a repeatable calendar item. This object must be defined for <code>OfficeHours</code> type calendar items.",
          "$ref": "#/definitions/CalendarItemRecurrence"
        }
      }
    },
    "CalendarItemRecurrence": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Recurrence count indicating how many times the calendar item should be repeated. Either this count OR the 'until' date is/'should be' set. When creating a calendar item, 'until' date will be used if both 'until' date and the count are set."
        },
        "frequency": {
          "type": "string",
          "description": "Frequency of the calendar item repeated.\n\n\n| Type      | Description\n | --------- | --------- |\n| Monthly |  |\n| Weekly |  |\n| Daily |  |\n",
          "enum": [
            "Monthly",
            "Weekly",
            "Daily"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval between recurrences depends on the repeating type. For example, if the calendar times should be repeated every three weeks, you need set interval to 3 as well as frequency to \"Weekly\". Minimum and Maximum allowed Intervals are 1 and 100 respectively."
        },
        "monthRepeatDay": {
          "type": "integer",
          "format": "int32",
          "description": "This property is used in conjunction with the 'Monthly' frequency and it indicates on which day of the month the calendar item is/'should be' repeated on. The valid values are valid month days, that is, 1 to 31. Either this OR both 'monthPosition' and 'repeatDay' should be set to create a recurring calendar item with 'Monthly' frequency."
        },
        "monthPosition": {
          "type": "integer",
          "format": "int32",
          "description": "This property is used in conjunction with the 'Monthly' frequency and it indicates that the calendar item is/'should be' repeated on nth occurrence of 'repeatDay' in the month. Valid values for 'monthPosition' are integers in the range of -1 and 4 inclusive: -1 for the last occurrence, 1 for the first occurrence, 2 for the second occurrence, and so on. 0 is not used."
        },
        "originalStart": {
          "type": "string",
          "format": "date-time",
          "description": "The original start date for the calendar item."
        },
        "originalEnd": {
          "type": "string",
          "format": "date-time",
          "description": "The original end date for the calendar item."
        },
        "repeatBroken": {
          "type": "boolean",
          "description": "Calendar item that's repeated is part of a recurring series of calendar events but the item has been changed since its original creation. In other words, the calendar item has been modified to no longer align with the recurring series (day/time changed for example) of events. This can only be true if the calendar item is repeatable."
        },
        "repeatDay": {
          "type": "string",
          "description": "For monthly recurring event, repeat by day of week.\n\n\n| Type      | Description\n | --------- | --------- |\n| Sunday |  |\n| Monday |  |\n| Tuesday |  |\n| Wednesday |  |\n| Thursday |  |\n| Friday |  |\n| Saturday |  |\n",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "description": "The date the calendar item should be repeated until. Either this 'until' date OR the count is/'should be' set. When creating a calendar item, 'until' date will be used if both 'until' date and the count are set."
        },
        "weekDays": {
          "type": "array",
          "description": "This property is used in conjunction with the 'Weekly' frequency and it indicates the days of the week the calendar item should be repeated on.",
          "items": {
            "$ref": "#/definitions/BYDAYEnum"
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source of the category",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The ID of this category's parent category",
          "readOnly": true
        },
        "categoryId": {
          "type": "string",
          "description": "The human-readable id of the category",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of category"
        },
        "description": {
          "type": "string",
          "description": "The description of the category"
        },
        "type": {
          "type": "string",
          "description": "Type of category\n\n\n| Type      | Description\n | --------- | --------- |\n| Course |  |\n| Organization |  |\n",
          "readOnly": true,
          "enum": [
            "Course",
            "Organization"
          ]
        },
        "frontPage": {
          "type": "boolean",
          "description": "Boolean indicating whether or not the category should appear on the catalog front page"
        },
        "available": {
          "type": "boolean",
          "description": "Boolean indicating whether or not the category is available"
        },
        "restricted": {
          "type": "boolean",
          "description": "Boolean indicating whether or not category is available to all roles, or restricted to a specific set of roles."
        },
        "institutionRoleIds": {
          "type": "array",
          "description": "The roles for which this category is available, if category is set to restricted. Not populated for lists of categories, only for individual category",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time at which the category was created",
          "readOnly": true
        }
      }
    },
    "CategoryCourseMembership": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string",
          "description": "The category ID.",
          "readOnly": true
        },
        "categoryType": {
          "type": "string",
          "description": "The category type.\n\n\n| Type      | Description\n | --------- | --------- |\n| Course |  |\n| Organization |  |\n",
          "readOnly": true,
          "enum": [
            "Course",
            "Organization"
          ]
        },
        "courseId": {
          "type": "string",
          "description": "The course ID.",
          "readOnly": true
        },
        "course": {
          "description": "The course detailed information.\n\n**Since**: 3700.5.0",
          "$ref": "#/definitions/CourseV2"
        },
        "dataSourceId": {
          "type": "string",
          "description": "The data source ID.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was created.",
          "readOnly": true
        }
      }
    },
    "Content": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the content.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The ID of the content's parent.  Note that top-level contents do not have parents. The 'parentId' field is a writable field as of the Bb Learn 3200.6.0 release.  Specifying a new value in PATCH requests allows the Content object to be moved from one parent to another."
        },
        "title": {
          "type": "string",
          "description": "The title or name of this content. Typically shown as the main text to click in the course outline when accessing the content."
        },
        "body": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The body text associated with this content. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "description": {
          "type": "string",
          "description": "The short description of this content.\n\nThis field is not used in Classic courses.  For Ultra courses this is used to show information directly on the course outline.",
          "maxLength": 750
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this content was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this content was modified.\n\n**Since**: 3700.4.0",
          "readOnly": true
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The position of this content within its parent folder. Position values are zero-based (the first element has a position value of zero, not one). Default position is last in the list of child contents under the parent."
        },
        "hasChildren": {
          "type": "boolean",
          "description": "Indicates whether this content is allowed to have child content items.",
          "readOnly": true
        },
        "hasGradebookColumns": {
          "type": "boolean",
          "description": "Indicates whether this content item has one or more gradebook columns.\n\nAssociated gradebook columns can be accessed via /learn/api/public/v1/courses/$courseId/gradebook/columns?contentId=$contentId\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "hasAssociatedGroups": {
          "type": "boolean",
          "description": "Indicates whether this content item has one or more associated groups.\n\nAssociated groups can be accessed via /learn/api/public/v1/courses/$courseId/contents/$contentId/groups\n\n**Since**: 3100.4.0",
          "readOnly": true
        },
        "launchInNewWindow": {
          "type": "boolean",
          "description": "Indicates whether the content is going to open in a new window.\n\n**Since**: 3800.10.0"
        },
        "reviewable": {
          "type": "boolean",
          "description": "Indicates whether Review Status is enabled for this content. Content items with review status enabled can be marked as reviewed by students in classic courses and content items with review status enabled in Ultra are either in a Forced Sequence or content that should be counted towards the progress tracking feature as of 3900.19 This can be used to track performance and in Adaptive Release rules to control the release of other content.\n\n**Since**: 3700.15.0"
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the content to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the content is currently available to students.  Instructors can always access the content.  If set to 'PartiallyVisible', the title will be available to students but the body will not.  Defaults to Yes.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n| PartiallyVisible |  |\n",
              "enum": [
                "Yes",
                "No",
                "PartiallyVisible"
              ]
            },
            "allowGuests": {
              "type": "boolean",
              "description": "Whether this content is available to users with the 'guest' role. Defaults to true."
            },
            "allowObservers": {
              "type": "boolean",
              "description": "Whether or not \"observers\" are allowed access to this Content. Defaults to true.\n\n**Since**: 3900.31.0"
            },
            "adaptiveRelease": {
              "type": "object",
              "description": "Settings controlling adaptive release of the content to students.",
              "title": "AdaptiveRelease",
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date when this content will become available to students."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date when this content will no longer be available to students."
                }
              }
            }
          }
        },
        "contentHandler": {
          "description": "Extended settings specific to this content item's content handler.",
          "$ref": "#/definitions/ContentHandler"
        },
        "links": {
          "type": "array",
          "description": "A list of links to resources related to this content item. Supported relation types include:\n\n- alternate\n\n**Since**: 3900.0.0",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "ContentCollectionResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID the Resource.",
          "readOnly": true
        },
        "xid": {
          "type": "string",
          "description": "The primary ID of the resource in xythos format.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the Resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the Resource; 'File' or 'Folder'\n\n\n| Type      | Description\n | --------- | --------- |\n| File |  |\n| Folder |  |\n",
          "readOnly": true,
          "enum": [
            "File",
            "Folder"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the Resource in bytes.",
          "readOnly": true
        },
        "hasLinks": {
          "type": "boolean",
          "description": "Whether the Resource has associated Course Content links.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The Id of the Resource's parent folder.",
          "readOnly": true
        },
        "creatorId": {
          "type": "string",
          "description": "The Id of the User who created the Resource.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this Resource was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this Resource was last modified.",
          "readOnly": true
        },
        "mimeType": {
          "type": "string",
          "description": "The mime-type for this Resource; only set if the Resource is of type 'File'"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version number for this Resource; only set if the Resource is of type 'File' and is versioned.",
          "readOnly": true
        },
        "links": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "title": "ContentCollectionLink",
            "properties": {
              "rel": {
                "type": "string",
                "description": "Describes how the current context is related to the target resource.\n\nSupported values: \n\n | Relation Type | Media Type         | Functionality                                | Since    |\n |---------------|--------------------|----------------------------------------------|----------|\n | \"canonical\"   |  application/json  | Links to the resource URL                    | 3900.41.0 |\n | \"describes\"   |  *                 | Links to the download URL of a resource      | 3900.41.0 |\n \n\n* \"describes\" relation's media type will depend on the file's own media type.",
                "readOnly": true
              },
              "href": {
                "type": "string",
                "description": "Contains a target Internationalized Resource Identifiers (IRIs)",
                "readOnly": true
              },
              "title": {
                "type": "string",
                "description": "Title attributes for the target IRI",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Format attributes for the target IRI",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "ContentGroup": {
      "type": "object",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "The ID of the associated content.",
          "readOnly": true
        },
        "groupId": {
          "type": "string",
          "description": "The ID of the association of content and group.",
          "readOnly": true
        }
      }
    },
    "ContentHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The content handler's ID.\n\nPublicly supported handlers: \n\n | ID                                 | Documentation                   | Since     |\n |------------------------------------|---------------------------------|-----------|\n | resource/x-bb-document             | ContentItemTOPubV1              |  3000.1.0 |\n | resource/x-bb-externallink         | ExternalLinkTOPubV1             |  3000.1.0 |\n | resource/x-bb-folder               | ContentFolderTOPubV1            |  3000.1.0 |\n | resource/x-bb-courselink           | CourseLinkTOPubV1               |  3100.5.0 |\n | resource/x-bb-forumlink            | DiscussionLinkTOPubV1           |  3100.6.0 |\n | resource/x-bb-blti-link            | BasicLTITOPubV1                 |  3200.6.0 |\n | resource/x-bb-file                 | ContentFileTOPubV1              |  3200.6.0 |\n | resource/x-bb-asmt-test-link       | TestLinkTOPubV1                 |  3300.5.0 |\n | resource/x-bb-assignment           | AssignmentTOPubV1               |  3400.9.0 |\n | resource/x-bb-blti-bltiplacement-* | BasicLTIPlacementContentTOPubV1 |  3600.0.0 |\n \n\nFor handlers that are not publicly supported yet, their ID will be shown here, and updates to common content attributes are allowed, but extended handler-specific attributes will not be visible.",
          "readOnly": true
        }
      }
    },
    "Course": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the course.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "A secondary unique ID for the course. Used by LTI launches and other inter-server operations.",
          "readOnly": true,
          "maxLength": 32
        },
        "externalId": {
          "type": "string",
          "description": "An optional externally-defined unique ID for the course. Defaults to the courseId.\n\nFormerly known as 'batchUid'.",
          "maxLength": 256
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this course. This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "courseId": {
          "type": "string",
          "description": "The Course ID attribute, shown to users in the UI.",
          "readOnly": true,
          "maxLength": 100
        },
        "name": {
          "type": "string",
          "description": "The name of the course.",
          "maxLength": 333
        },
        "description": {
          "type": "string",
          "description": "The description of the course."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this course was created.",
          "readOnly": true
        },
        "organization": {
          "type": "boolean",
          "description": "Whether this object represents an Organization. Defaults to false.",
          "readOnly": true
        },
        "ultraStatus": {
          "type": "string",
          "description": "Whether the course is rendered using Classic or Ultra Course View.\n\n\n| Type      | Description\n | --------- | --------- |\n| Undecided | The ultra status is not decided. |\n| Classic | The course is decided as classic. |\n| Ultra | The course is decided as ultra |\n| UltraPreview | The course is currently in Ultra mode but during the preview state where it may still be reverted via a Restore to the classic state |\n",
          "readOnly": true,
          "enum": [
            "Undecided",
            "Classic",
            "Ultra",
            "UltraPreview"
          ]
        },
        "allowGuests": {
          "type": "boolean",
          "description": "Whether guests (users with the role guest) are allowed access to the course. Modifiable only for Classic course. Defaults to true for Classic Courses and false for Ultra Courses."
        },
        "readOnly": {
          "type": "boolean",
          "description": "This status does not affect availability of the course for viewing in any way. readOnly is valid for both Ultra and Classic courses. If an Ultra course is in readOnly mode, updates are not possible. For a Classic course in readOnly mode, updates are still possible (through Web UI but not through REST i.e. closed is enforced for original courses when updated through REST the same way Ultra courses are blocked) but new notifications are not generated.\n\n**Deprecated**: since 3400.8.0; use the v2 endpoint's closedComplete property instead"
        },
        "termId": {
          "type": "string",
          "description": "The ID of the term associated to this course. This may optionally be the term's externalId using the syntax \"externalId:spring.2016\"."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the course to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the course is currently available to students. Instructors can always access the course if they have 'Access unavailable course' entitlement. If set to 'Term', the course's parent term availability settings will be used.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may access the course. |\n| No | Students may not access the course. |\n| Disabled | Disabled by the SIS. Students may not access the course.  **Since**: 3100.0.0 |\n| Term | Availability is inherited from the term settings. Requires a termId be set. |\n",
              "enum": [
                "Yes",
                "No",
                "Disabled",
                "Term"
              ]
            },
            "duration": {
              "type": "object",
              "description": "Settings controlling the length of time the course is available.",
              "title": "Duration",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The intended length of the course.\n\n\n| Type      | Description\n | --------- | --------- |\n| Continuous | Course is active on an ongoing basis. |\n| DateRange | Course is only intended to be available between specific date ranges |\n| FixedNumDays | Course is only available for a set number of days |\n| Term | Course availablity is dictated by its associated term |\n",
                  "enum": [
                    "Continuous",
                    "DateRange",
                    "FixedNumDays",
                    "Term"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this course starts. May only be set if availability.duration.type is DateRange."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this course ends. May only be set if availability.duration.type is DateRange."
                },
                "daysOfUse": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of days this course can be used. May only be set if availability.duration.type is FixedNumDays."
                }
              }
            }
          }
        },
        "enrollment": {
          "type": "object",
          "description": "Settings controlling how students may enroll in the course.",
          "title": "Enrollment",
          "properties": {
            "type": {
              "type": "string",
              "description": "Specifies the enrollment options for the course. Defaults to InstructorLed.\n\n\n| Type      | Description\n | --------- | --------- |\n| InstructorLed | Enrollment tasks for the course can only performed by the instructor |\n| SelfEnrollment | Instructors have the ability to enroll users, and students can also enroll themselves in the course |\n| EmailEnrollment | Instructors have the ability to enroll users, and students can email requests to the instructor for enrollment |\n",
              "enum": [
                "InstructorLed",
                "SelfEnrollment",
                "EmailEnrollment"
              ]
            },
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which enrollments are allowed for the course. May only be set if enrollment.type is SelfEnrollment."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which enrollment in this course ends. May only be set if enrollment.type is SelfEnrollment."
            },
            "accessCode": {
              "type": "string",
              "description": "The enrollment access code associated with this course. May only be set if enrollment.type is SelfEnrollment."
            }
          }
        },
        "locale": {
          "type": "object",
          "description": "Settings controlling localization within the course.",
          "title": "Locale",
          "properties": {
            "id": {
              "type": "string",
              "description": "The locale of this course."
            },
            "force": {
              "type": "boolean",
              "description": "Whether students are forced to use the course's specified locale."
            }
          }
        },
        "hasChildren": {
          "type": "boolean",
          "description": "Whether the course has any cross-listed children.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The cross-listed parentId associated with the course, if the course is a child course.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "externalAccessUrl": {
          "type": "string",
          "description": "A URL corresponding to the Course Page for the course.  Formatting varies based on whether the course is rendered using Classic or Ultra Course View\n\n**Since**: 3200.3.0",
          "readOnly": true
        },
        "guestAccessUrl": {
          "type": "string",
          "description": "A URL for viewing the Course Page for the course as a guest.  Formatting varies based on whether the course is rendered using Classic or Ultra Course View\n\n**Since**: 3200.3.0",
          "readOnly": true
        }
      }
    },
    "CourseAnnouncement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Primary key identifier",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of this Announcement."
        },
        "body": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The message body of the Announcement. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "creator": {
          "type": "string",
          "description": "The user that created the Announcement.",
          "readOnly": true
        },
        "draft": {
          "type": "boolean",
          "description": "An indication of whether or not the Announcement is in draft status."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the course to students.",
          "title": "Availability",
          "properties": {
            "duration": {
              "type": "object",
              "description": "Duration indicates when the System Announcement is Available based on whether it is Permanent or if the date/time of the request falls within its Start & End dates.",
              "title": "Duration",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Indicates whether this Course Announcement is always displayed (Permanent) or if it is shown only between the Start and End dates (Restricted).\n\n\n| Type      | Description\n | --------- | --------- |\n| Permanent | The Announcement will always be displayed. |\n| Restricted | The Announcement will start being displayed on Duration.Start and stop being displayed on Duration.End |\n",
                  "readOnly": true,
                  "enum": [
                    "Permanent",
                    "Restricted"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this Announcement starts being Available."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this Announcement stops being Available."
                }
              }
            }
          }
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the Announcement was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "participants": {
          "type": "integer",
          "format": "int32",
          "description": "The number of users that the Announcement will reach.\n\nShown when adding the query parameter: \"expand=readCount\".",
          "readOnly": true
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The position of the Announcement.",
          "readOnly": true
        },
        "readCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of reads for the Announcement.\n\nShown when adding the query parameter: \"expand=readCount\".",
          "readOnly": true
        }
      }
    },
    "CourseCategoryMembership": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string",
          "description": "The category ID.",
          "readOnly": true
        },
        "categoryType": {
          "type": "string",
          "description": "The category type.\n\n\n| Type      | Description\n | --------- | --------- |\n| Course |  |\n| Organization |  |\n",
          "readOnly": true,
          "enum": [
            "Course",
            "Organization"
          ]
        },
        "category": {
          "description": "The category detailed information.\n\n**Since**: 3700.7.0",
          "$ref": "#/definitions/Category"
        },
        "courseId": {
          "type": "string",
          "description": "The course ID.",
          "readOnly": true
        },
        "dataSourceId": {
          "type": "string",
          "description": "The data source ID.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was created.",
          "readOnly": true
        }
      }
    },
    "CourseChild": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the child course associated with this cross-listing.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The primary ID of the parent course associated with this cross-listing.",
          "readOnly": true
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this course cross-listing.  This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this course cross-listing was created.",
          "readOnly": true
        },
        "childCourse": {
          "description": "The child course associated with this cross-listing.",
          "$ref": "#/definitions/Course"
        }
      }
    },
    "CourseHierarchyNode": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "The primary ID of the Hierarchy Node",
          "readOnly": true
        },
        "node": {
          "description": "The hierarchy node of the node/course association.\n\nShown when adding the query parameter: \"expand=node\"",
          "$ref": "#/definitions/Node"
        },
        "courseId": {
          "type": "string",
          "description": "The primary ID of the Course",
          "readOnly": true
        },
        "isPrimary": {
          "type": "boolean",
          "description": "Whether or not this association represents the primary node association of the course"
        }
      }
    },
    "CourseIdParam": {
      "type": "object"
    },
    "CourseMeeting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The primary ID of the meeting.",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "The primary ID of the course."
        },
        "title": {
          "type": "string",
          "description": "The title of the meeting"
        },
        "description": {
          "type": "string",
          "description": "The description of the meeting"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of meeting"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of meeting"
        },
        "externalLink": {
          "type": "string",
          "description": "The externalLink of course meeting"
        }
      }
    },
    "CourseMembership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of this course/user relationship.\n\n**Since**: 3700.14.0",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The primary ID of the user.",
          "readOnly": true
        },
        "user": {
          "description": "The user associated with the membership.\n\nShown when adding the query parameter: \"expand=user\". And can be filtered with the \"fields\" query parameter, for example \"fields=user.uuid,user.externalId\".\n\n**Since**: 3400.7.0",
          "$ref": "#/definitions/User"
        },
        "courseId": {
          "type": "string",
          "description": "The primary ID of the course.",
          "readOnly": true
        },
        "childCourseId": {
          "type": "string",
          "description": "The primary ID of the child, cross-listed course, in which the user is directly enrolled. </p> This field is read only in Learn versions 3000.11.0 through 3400.0.0. As of 3400.1.0, this field is mutable.  </p> If this membership's course is a parent course in a cross-listed set, the childCourseId can be updated to move the membership enrollment between child courses and the parent course in  the set.  Patching the childCourseId to \"null\" will move the membership to the parent course.\n\n**Since**: 3000.11.0"
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this course.  This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was modified.  A membership is considered modified only if an aspect of the membership itself changes (e.g.: availability or courseRoleId), and not if the Course or User alone is modified.\n\n**Since**: 3800.8.0",
          "readOnly": true
        },
        "availability": {
          "description": "Settings controlling availability of the course membership.",
          "$ref": "#/definitions/Availability"
        },
        "courseRoleId": {
          "type": "string",
          "description": "The user's role in the course.\n\nThese roles are also valid for an organization, although they are named differently in the UI.\n\nCustom course roles may also be referenced by their IDs.\n\n\n| Type      | Description\n | --------- | --------- |\n| Instructor | Has access to all areas in the Control Panel. This role is generally given to those developing, teaching, or facilitating the class. Instructors may access a course that is unavailable to students. This role is customizable and may have different capabilities from what is documented here. |\n| BbFacilitator | The facilitator is an instructor like role. Facilitators are restricted versions of an instructor, in that they are able to deliver course instruction and administer all aspects of a pre-constructed course, but are not allowed to modify or alter the course. This role is customizable and may have different capabilities from what is documented here. |\n| TeachingAssistant | The teaching assistant role is that of a co-teacher. Teaching assistants are able to administer all areas of a course. Their only limitations are those imposed by the instructor or Blackboard administrator at your school. This role is customizable and may have different capabilities from what is documented here. |\n| CourseBuilder | Manages the course without having access to student grades. This role is customizable and may have different capabilities from what is documented here. |\n| Grader | Assists the instructor in the creation, management, delivery, and grading of items. This role is customizable and may have different capabilities from what is documented here. |\n| Student |  |\n| Guest | Has no access to the Control Panel. Areas within the course are made available to guests, but typically they can only view course materials; they do not have access to tests or assessments, and do not have permission to post on discussion boards. This role's behavior is immutable. |\n",
          "enum": [
            "Instructor",
            "BbFacilitator",
            "TeachingAssistant",
            "CourseBuilder",
            "Grader",
            "Student",
            "Guest"
          ]
        },
        "bypassCourseAvailabilityUntil": {
          "type": "string",
          "format": "date-time",
          "description": "If present, this date signals that the user associated with this membership has special access to the course regardless of the course's availability setting prior to the moment specified by this field. After the date has passed, the membership will respect the course's availability.",
          "readOnly": true
        },
        "lastAccessed": {
          "type": "string",
          "format": "date-time",
          "description": "This date signals the date this membership was used; in other words, the last date the user accessed the associated course or content contained by that course.\n\nThe recording of any activity which would lead to this date getting updated does happen asynchronously in batches. So, there may be some delay between an activity which would update this value and the availability of the new date. It is recommended when using this value to note that activity within the last 5 minutes may not be taken into account.\n\n**Since**: 3300.9.0",
          "readOnly": true
        }
      }
    },
    "CourseMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the message",
          "readOnly": true
        },
        "subject": {
          "type": "string",
          "description": "The subject of the message.",
          "readOnly": true
        },
        "body": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The body text of the message. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information.",
          "readOnly": true
        },
        "postedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date this message was created.",
          "readOnly": true
        },
        "isRead": {
          "type": "boolean",
          "description": "Whether or not the message has been read"
        },
        "type": {
          "type": "string",
          "description": "Type of the message\n\n\n| Type      | Description\n | --------- | --------- |\n| System | Course message generated by the system, to be more specific, the message created when adding a new participant into the conversation. |\n| Normal | Any course message sent by the course conversation participants will be considered as \"NORMAL\" type. |\n",
          "readOnly": true,
          "enum": [
            "System",
            "Normal"
          ]
        },
        "sender": {
          "description": "A full representation of the Sender. Only populated if the expand query parameter includes the sender property.",
          "$ref": "#/definitions/User"
        },
        "senderId": {
          "type": "string",
          "description": "The ID of the sender.",
          "readOnly": true
        },
        "attachment": {
          "description": "Metadata for the file attached to the message, if one exists",
          "$ref": "#/definitions/CourseMessageAttachment"
        },
        "toUsers": {
          "type": "array",
          "description": "The to participants of the message",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "ccUsers": {
          "type": "array",
          "description": "The cc participants of the message",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "bccUsers": {
          "type": "array",
          "description": "The bcc participants of the message",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "isExistingAttachment": {
          "type": "boolean",
          "description": "Whether or not the attachment is the existing attachment for the message",
          "readOnly": true
        },
        "isReply": {
          "type": "boolean",
          "description": "Whether or not this message is a reply to another message",
          "readOnly": true
        }
      }
    },
    "CourseMessageAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of file attachment"
        },
        "fileName": {
          "type": "string",
          "description": "The fileName of the attachment"
        },
        "mimeType": {
          "type": "string",
          "description": "The mime type of the attachment"
        },
        "fileLocation": {
          "type": "string",
          "description": "The location of the uploaded file"
        }
      }
    },
    "CourseMessageFolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the folder",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "The label of the folder",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the folder\n\n\n| Type      | Description\n | --------- | --------- |\n| Inbox |  |\n| Sent |  |\n| Delete |  |\n| Custom |  |\n",
          "readOnly": true,
          "enum": [
            "Inbox",
            "Sent",
            "Delete",
            "Custom"
          ]
        },
        "courseMessagesCounts": {
          "description": "The total and unread counts of messages in folder",
          "$ref": "#/definitions/CourseMessagesCounts"
        }
      }
    },
    "CourseMessageParticipant": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The id of the message"
        },
        "userId": {
          "type": "string",
          "description": "The id of the participant"
        },
        "user": {
          "description": "The User object",
          "$ref": "#/definitions/User"
        },
        "participationType": {
          "type": "string",
          "description": "The type of participation\n\n\n| Type      | Description\n | --------- | --------- |\n| From | Sender user from the message |\n| To | The to or recipient user of the message |\n| Cc | The cc user of the message |\n| Bcc | The bcc user of the message |\n",
          "enum": [
            "From",
            "To",
            "Cc",
            "Bcc"
          ]
        }
      }
    },
    "CourseMessagesCounts": {
      "type": "object",
      "properties": {
        "courseId": {
          "type": "string",
          "description": "The identifier of the course for which this data applies"
        },
        "unreadCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of unread messages"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of messages"
        }
      }
    },
    "CourseRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the course role",
          "readOnly": true
        },
        "roleId": {
          "type": "string",
          "description": "The identifier used to assign the course role to a course enrollment.\n\nFor system defined course roles, this value will be one of Student, Instructor, TeachingAssistant, CourseBuilder, Grader or Guest\n\nFor custom course roles, this will be the roleId entered during the creation of the role. Allowed characters for the custom course roleId's are any letter, number, period, underscore and dash.",
          "readOnly": true
        },
        "nameForCourses": {
          "type": "string",
          "description": "The role name presented to users when the course role is associated with a course.",
          "maxLength": 64
        },
        "nameForOrganizations": {
          "type": "string",
          "description": "The role name presented to users when the course role is associated with an organization.",
          "maxLength": 64
        },
        "description": {
          "type": "string",
          "description": "Optional description of the course role",
          "maxLength": 1000
        },
        "custom": {
          "type": "boolean",
          "description": "False if the course role exists as a system generated course role. True if the course role was created by an admin user.\n\nBoth custom and system generated course roles can be modified, but only custom course roles can be deleted."
        },
        "actAsInstructor": {
          "type": "boolean",
          "description": "Implies access to unavailable courses, display in the Course catalog, and receiving email enrollment requests"
        },
        "availability": {
          "type": "object",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the course role is currently available to course enrollments, organization enrollments, both or neither.  Valid values are:\n\n- Course: Course Role is available to Course Enrollments\n- Organization: Course Role is available to Organization Enrollments\n- Both: Course Role is available to both Course and Organization Enrollments\n- None: Course Role is not available\n\n\n| Type      | Description\n | --------- | --------- |\n| Course | Course only |\n| Organization | Organization only |\n| CourseAndOrganization | Both Course and Organization |\n| No | Neither Course nor Organization |\n",
              "enum": [
                "Course",
                "Organization",
                "CourseAndOrganization",
                "No"
              ]
            }
          }
        }
      }
    },
    "CourseTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this task.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the task.\n\n\n| Type      | Description\n | --------- | --------- |\n| Queued | initial state of a task |\n| Assigned |  |\n| Running |  |\n| Complete |  |\n| CompleteWithErrors |  |\n| Incomplete |  |\n",
          "readOnly": true,
          "enum": [
            "Queued",
            "Assigned",
            "Running",
            "Complete",
            "CompleteWithErrors",
            "Incomplete"
          ]
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Task progress, with 0 representing not started and 100 representing done.",
          "readOnly": true
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "The date the task was started.",
          "readOnly": true
        }
      }
    },
    "CourseToc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Get the Id of the Course ToC (Ex. '_2_1')",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "Get the Id of the Course (Ex. '_3_1')",
          "readOnly": true
        },
        "contentId": {
          "type": "string",
          "description": "The Id of the Content Folder associated with this ToC entry. This will apply only if Course ToC Target Type is CONTENT, otherwise, this Id will be null. (Ex. '_2_1')",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "The Label of the Course ToC, this is what user will see as menu option label. (Ex. 'Information')",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "The URL representing the path to a specific resource, usually associated with a Content Folder. (Ex. 'path/to/resource')",
          "readOnly": true
        },
        "targetType": {
          "type": "string",
          "description": "The Target Type for Course ToC entry. This will tell to this ToC register which kind of handler will be associated to its main menu's option. (Ex. 'CONTENT', ´MODULE´, `APPLICATION`)\n\n\n| Type      | Description\n | --------- | --------- |\n| Application | The Toc item references a built-in application or system extension. |\n| Content | The Toc item references a content folder defined within the course. |\n| ContentItem | The Toc item references a content item defined within the course. |\n| Link | The Toc item is a link to another entity defined within the course. |\n| StaffInfo | The Toc item references a staff information folder defined within the course. |\n| Url | The Toc item is a URL to a resource. |\n| Divider | The Toc item is a divider in the menu. |\n| Subheader | The Toc item is a sub-header in the menu. |\n| Module | The Toc item is a Course Module Page. |\n",
          "readOnly": true,
          "enum": [
            "Application",
            "Content",
            "ContentItem",
            "Link",
            "StaffInfo",
            "Url",
            "Divider",
            "Subheader",
            "Module"
          ]
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The position in which the main menu option associated with this ToC will be shown. (Ex. 0)",
          "readOnly": true
        },
        "launchInNewWindow": {
          "type": "boolean",
          "description": "Whether or not menu option will be launched in a new window (Ex. 0)",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Boolean representing if main menu option associated with this ToC is able to be shown.",
          "readOnly": true
        },
        "isEntryPoint": {
          "type": "boolean",
          "description": "Whether or not this ToC is an entry point.",
          "readOnly": true
        },
        "internalHandle": {
          "type": "string",
          "description": "The internal handle for this Course ToC (Ex. 'content')",
          "readOnly": true
        },
        "allowGuests": {
          "type": "boolean",
          "description": "Whether or not Guests can view this ToC."
        },
        "allowObservers": {
          "type": "boolean",
          "description": "Whether or not Observers can view this ToC."
        }
      }
    },
    "CourseV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the course.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "A secondary unique ID for the course. Used by LTI launches and other inter-server operations.",
          "readOnly": true,
          "maxLength": 32
        },
        "externalId": {
          "type": "string",
          "description": "An optional externally-defined unique ID for the course. Defaults to the courseId.\n\nFormerly known as 'batchUid'.",
          "maxLength": 256
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this course. This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "courseId": {
          "type": "string",
          "description": "The Course ID attribute, shown to users in the UI.",
          "readOnly": true,
          "maxLength": 100
        },
        "name": {
          "type": "string",
          "description": "The name of the course.",
          "maxLength": 333
        },
        "description": {
          "type": "string",
          "description": "The description of the course."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this course was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this course was last modified.\n\n**Since**: 3500.4.0",
          "readOnly": true
        },
        "organization": {
          "type": "boolean",
          "description": "Whether this object represents an Organization. Defaults to false.",
          "readOnly": true
        },
        "ultraStatus": {
          "type": "string",
          "description": "Whether the course is rendered using Classic or Ultra Course View.\n\n\n| Type      | Description\n | --------- | --------- |\n| Undecided | The ultra status is not decided. |\n| Classic | The course is decided as classic. |\n| Ultra | The course is decided as ultra |\n| UltraPreview | The course is currently in Ultra mode but during the preview state where it may still be reverted via a Restore to the classic state |\n",
          "readOnly": true,
          "enum": [
            "Undecided",
            "Classic",
            "Ultra",
            "UltraPreview"
          ]
        },
        "allowGuests": {
          "type": "boolean",
          "description": "Whether guests (users with the role guest) are allowed access to the course. Modifiable only for Classic course. Defaults to true for Classic Courses and false for Ultra Courses."
        },
        "allowObservers": {
          "type": "boolean",
          "description": "Whether observers are allowed access to the course. Modifiable only for Classic course. Defaults to false.\n\n**Since**: 3900.31.0"
        },
        "closedComplete": {
          "type": "boolean",
          "description": "This status does not affect availability of the course for viewing in any way. closedComplete is valid for both Ultra and Classic courses. If an Ultra course is in closedComplete mode, updates are not possible. For a Classic course in closedComplete mode, updates are still possible (through Web UI but not through REST i.e. closed is enforced for original courses when updated through REST the same way Ultra courses are blocked) but new notifications are not generated."
        },
        "termId": {
          "type": "string",
          "description": "The ID of the term associated to this course. This may optionally be the term's externalId using the syntax \"externalId:spring.2016\"."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the course to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the course is currently available to students. Instructors can always access the course if they have 'Access unavailable course' entitlement. If set to 'Term', the course's parent term availability settings will be used.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may access the course. |\n| No | Students may not access the course. |\n| Disabled | Disabled by the SIS. Students may not access the course. @since 3100.0.0 |\n| Term | Availability is inherited from the term settings. Requires a termId be set. |\n",
              "enum": [
                "Yes",
                "No",
                "Disabled",
                "Term"
              ]
            },
            "duration": {
              "type": "object",
              "description": "Settings controlling the length of time the course is available.",
              "title": "Duration",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The intended length of the course. Possible values are:\n\n- Continuous: The course is active on an ongoing basis. This is the default.\n- DateRange: The course will only be available between specific date ranges.\n- FixedNumDays: The course will only be available for a set number of days.\n- Term: The course's parent term duration settings will be used.\n\n\n| Type      | Description\n | --------- | --------- |\n| Continuous | Course is active on an ongoing basis. |\n| DateRange | Course is only intended to be available between specific date ranges |\n| FixedNumDays | Course is only available for a set number of days |\n| Term | Course availablity is dictated by its associated term |\n",
                  "enum": [
                    "Continuous",
                    "DateRange",
                    "FixedNumDays",
                    "Term"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this course starts. May only be set if availability.duration.type is DateRange."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this course ends. May only be set if availability.duration.type is DateRange."
                },
                "daysOfUse": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of days this course can be used. May only be set if availability.duration.type is FixedNumDays."
                }
              }
            }
          }
        },
        "enrollment": {
          "type": "object",
          "description": "Settings controlling how students may enroll in the course.",
          "title": "Enrollment",
          "properties": {
            "type": {
              "type": "string",
              "description": "Specifies the enrollment options for the course. Defaults to InstructorLed.\n\n\n| Type      | Description\n | --------- | --------- |\n| InstructorLed | Enrollment tasks for the course can only performed by the instructor |\n| SelfEnrollment | Instructors have the ability to enroll users, and students can also enroll themselves in the course |\n| EmailEnrollment | Instructors have the ability to enroll users, and students can email requests to the instructor for enrollment |\n",
              "enum": [
                "InstructorLed",
                "SelfEnrollment",
                "EmailEnrollment"
              ]
            },
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which enrollments are allowed for the course. May only be set if enrollment.type is SelfEnrollment."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which enrollment in this course ends. May only be set if enrollment.type is SelfEnrollment."
            },
            "accessCode": {
              "type": "string",
              "description": "The enrollment access code associated with this course. May only be set if enrollment.type is SelfEnrollment.",
              "maxLength": 50
            }
          }
        },
        "locale": {
          "type": "object",
          "description": "Settings controlling localization within the course.",
          "title": "Locale",
          "properties": {
            "id": {
              "type": "string",
              "description": "The locale of this course.",
              "maxLength": 20
            },
            "force": {
              "type": "boolean",
              "description": "Whether students are forced to use the course's specified locale."
            }
          }
        },
        "hasChildren": {
          "type": "boolean",
          "description": "Whether the course has any cross-listed children.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The cross-listed parentId associated with the course, if the course is a child course.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "externalAccessUrl": {
          "type": "string",
          "description": "A URL corresponding to the Course Page for the course.  Formatting varies based on whether the course is rendered using Classic or Ultra Course View\n\n**Since**: 3200.3.0",
          "readOnly": true
        },
        "guestAccessUrl": {
          "type": "string",
          "description": "A URL for viewing the Course Page for the course as a guest.  Formatting varies based on whether the course is rendered using Classic or Ultra Course View\n\n**Since**: 3200.3.0",
          "readOnly": true
        }
      }
    },
    "CreateAssignmentResult": {
      "type": "object",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Id of the content created during the assignment creation."
        },
        "gradeColumnId": {
          "type": "string",
          "description": "Id of the grade column created during the assignment creation."
        },
        "assessmentId": {
          "type": "string",
          "description": "Id of the assessment created during the assignment creation.  This is only created for Ultra course assignments."
        },
        "questionIds": {
          "type": "array",
          "description": "Ids of the assessment questions created during the assignment creation.  This is only created for Ultra course assignments.",
          "items": {
            "type": "string"
          }
        },
        "attachmentIds": {
          "type": "array",
          "description": "Ids of the file attachments created during assignment creation.  This is only created for Classic course assignments",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the data source.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "An externally-defined unique ID for the data source.\n\nFormerly known as 'batchUid'."
        },
        "description": {
          "type": "string",
          "description": "The description of the data source."
        }
      }
    },
    "Discussion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the discussion. (Ex. '_65_1')",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title given to the discussion forum",
          "maxLength": 333
        },
        "available": {
          "type": "boolean",
          "description": "Indicates if the discussion is available"
        },
        "gradable": {
          "type": "boolean",
          "description": "Indicates if the discussion allows grading"
        },
        "gradebookColumnId": {
          "type": "string",
          "description": "Id of the Grade column associated to this discussion.",
          "readOnly": true
        },
        "groupDiscussion": {
          "type": "boolean",
          "description": "Indicates if the discussion is a group discussion",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date in which the discussion was created.",
          "readOnly": true
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last date in which the discussion was updated.",
          "readOnly": true
        },
        "topic": {
          "description": "Topic of the Discussion. Only applicable to Ultra discussions.",
          "$ref": "#/definitions/Topic"
        }
      }
    },
    "DiscussionGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The ID of the group. (Ex. '_65_1')"
        },
        "discussionId": {
          "type": "string",
          "description": "The ID of the discussion. (Ex. '_66_1')"
        },
        "threadId": {
          "type": "string",
          "description": "The ID of the message holding as Discussion thread. (Ex. '_67_1')"
        }
      }
    },
    "DisplayGrade": {
      "type": "object",
      "properties": {
        "scaleType": {
          "type": "string",
          "description": "The type of Grade Column Grading Schema used when creating the displayed grade\n\n\n| Type      | Description\n | --------- | --------- |\n| Percent |  |\n| Score |  |\n| Tabular |  |\n| Text |  |\n| CompleteIncomplete |  |\n",
          "readOnly": true,
          "enum": [
            "Percent",
            "Score",
            "Tabular",
            "Text",
            "CompleteIncomplete"
          ]
        },
        "score": {
          "type": "number",
          "description": "The displayed score",
          "readOnly": true
        },
        "possible": {
          "type": "number",
          "description": "\n\nThe maximum possible points. This property does not take the grading schema into account. Regardless of the schema (percentage, letter, etc), this property will only return the maximum points possible for the column.</p>\n\nIn case the column's value is calculated from other columns, the value will not take into account the exempted columns' value.</p>\n\n**Since**: 3900.41.0",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "description": "The displayed text grade, based on the Grade Column Grading Schema or Grade Notation description.",
          "readOnly": true
        }
      }
    },
    "EmbeddedAttemptReceipt": {
      "type": "object",
      "properties": {
        "receiptId": {
          "type": "string",
          "description": "The ID of the receipt.",
          "readOnly": true
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the associated attempt was submitted.",
          "readOnly": true
        },
        "submissionTotalSize": {
          "type": "integer",
          "format": "int64",
          "description": "The total size of the submission in bytes\n\n**Since**: 3900.37.0",
          "readOnly": true
        }
      }
    },
    "FileAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "fileName": {
          "type": "string",
          "readOnly": true
        },
        "mimeType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Grade": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The user ID associated with this grade.",
          "readOnly": true
        },
        "columnId": {
          "type": "string",
          "description": "The grade column ID for this grade.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of this grade.\n\n\n| Type      | Description\n | --------- | --------- |\n| Graded | Grade has been graded, corresponding to dbValue 1 |\n| NeedsGrading | Grade needs grading, corresponding to dbValue 2 |\n",
          "readOnly": true,
          "enum": [
            "Graded",
            "NeedsGrading"
          ]
        },
        "text": {
          "type": "string",
          "description": "The text representation of this grade."
        },
        "score": {
          "type": "number",
          "description": "The score associated with this grade."
        },
        "overridden": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the score associated with this grade was last overridden.  An ISODate value is only returned if this grade is currently overridden; otherwise, returns null.",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "description": "The instructor notes associated with this grade. This notes field is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden."
        },
        "feedback": {
          "type": "string",
          "description": "The instructor feedback associated with this grade.  This feedback is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden."
        },
        "exempt": {
          "type": "boolean",
          "description": "Whether the score associated with this grade is ignored when computing the course grade."
        },
        "corrupt": {
          "type": "boolean",
          "description": "Whether the grade for a calculated column could be successfully computed.",
          "readOnly": true
        }
      }
    },
    "GradeColumn": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the grade column.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "The externalId for this grade column"
        },
        "name": {
          "type": "string",
          "description": "The name of the grade column."
        },
        "description": {
          "type": "string",
          "description": "The description of the grade column."
        },
        "externalGrade": {
          "type": "boolean",
          "description": "Whether this grade column is an external grade column."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this grade column was created.",
          "readOnly": true
        },
        "contentId": {
          "type": "string",
          "description": "For grade columns associated with a content item, the ID of the content item.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "score": {
          "type": "object",
          "description": "Settings controlling the numerical scoring of this grade column.",
          "title": "Score",
          "properties": {
            "possible": {
              "type": "number",
              "description": "The points possible for this grade column."
            },
            "decimalPlaces": {
              "type": "integer",
              "format": "int32",
              "description": "Decimal place precision used to display scores for this grade column.\n\n**Deprecated**: since 3200.10.0; no alternative exists since this field never fully functioned as described."
            }
          }
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling the availability/visibility of grade column data.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether this grade column is available to students\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may view the grade column. |\n| No | Students may not view the grade column. |\n",
              "enum": [
                "Yes",
                "No"
              ]
            }
          }
        },
        "grading": {
          "type": "object",
          "description": "Settings controlling whether numerical and text grade values for this grade column are calculated, determined based on attempts, or manually entered.",
          "title": "Grading",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of Grading settings for this Grade Column.\n\n\n| Type      | Description\n | --------- | --------- |\n| Attempts | Indicates score and grade values are determined based on user attempts |\n| Calculated | Indicates score and grade values are determined by applying a calculated formula. |\n| Manual | Indicates score and grade values are manually entered. |\n",
              "readOnly": true,
              "enum": [
                "Attempts",
                "Calculated",
                "Manual"
              ]
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which attempts are due for the grade column."
            },
            "attemptsAllowed": {
              "type": "integer",
              "format": "int32",
              "description": "Number of attempts allowed for the grade column."
            },
            "scoringModel": {
              "type": "string",
              "description": "The scoring model for the submitted grade column attempts.\n\n\n| Type      | Description\n | --------- | --------- |\n| Last |  |\n| Highest |  |\n| Lowest |  |\n| First |  |\n| Average |  |\n",
              "enum": [
                "Last",
                "Highest",
                "Lowest",
                "First",
                "Average"
              ]
            },
            "anonymousGrading": {
              "type": "object",
              "description": "Settings for anonymous grading",
              "title": "AnonymousGrading",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of AnonymousGrading settings for this Attempts based Grade Column.\n\n\n| Type      | Description\n | --------- | --------- |\n| None | Indicates anonymous grading is not enabled. |\n| AfterAllGraded | Indicates anonymized grades are released after all attempts have been graded. |\n| Date | Indicates anonymized grades are released after a specified release date. |\n",
                  "enum": [
                    "None",
                    "AfterAllGraded",
                    "Date"
                  ]
                },
                "releaseAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date after which grades are released from being anonymized, if AnonymousGrading type is 'Date'."
                }
              }
            }
          }
        }
      }
    },
    "GradeColumnV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the grade column.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "The externalId for this grade column"
        },
        "externalToolId": {
          "type": "string",
          "description": "The externalId for this grade column\n\n**Since**: 3500.2.0"
        },
        "name": {
          "type": "string",
          "description": "The name of the grade column."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the grade column. Only applicable for Classic courses. Ultra courses will simply use the `name` field.\n\n**Since**: 3300.2.0"
        },
        "description": {
          "type": "string",
          "description": "The description of the grade column."
        },
        "externalGrade": {
          "type": "boolean",
          "description": "Whether this grade column is an external grade column."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this grade column was created.",
          "readOnly": true
        },
        "contentId": {
          "type": "string",
          "description": "For grade columns associated with a content item, the ID of the content item.\n\n**Since**: 3000.11.0",
          "readOnly": true
        },
        "score": {
          "type": "object",
          "description": "Settings controlling the numerical scoring of this grade column.",
          "title": "Score",
          "properties": {
            "possible": {
              "type": "number",
              "description": "The points possible for this grade column."
            }
          }
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling the availability/visibility of grade column data.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether this grade column is available to students\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may view the grade column. |\n| No | Students may not view the grade column. |\n",
              "enum": [
                "Yes",
                "No"
              ]
            }
          }
        },
        "grading": {
          "type": "object",
          "description": "Settings controlling whether numerical and text grade values for this grade column are calculated, determined based on attempts, or manually entered.",
          "title": "Grading",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of Grading settings for this Grade Column.\n\n\n| Type      | Description\n | --------- | --------- |\n| Attempts | Indicates score and grade values are determined based on user attempts |\n| Calculated | Indicates score and grade values are determined by applying a calculated formula. |\n| Manual | Indicates score and grade values are manually entered. |\n",
              "readOnly": true,
              "enum": [
                "Attempts",
                "Calculated",
                "Manual"
              ]
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which attempts are due for the grade column."
            },
            "attemptsAllowed": {
              "type": "integer",
              "format": "int32",
              "description": "Number of attempts allowed for the grade column."
            },
            "scoringModel": {
              "type": "string",
              "description": "The scoring model for the submitted grade column attempts.\n\n\n| Type      | Description\n | --------- | --------- |\n| Last |  |\n| Highest |  |\n| Lowest |  |\n| First |  |\n| Average |  |\n",
              "enum": [
                "Last",
                "Highest",
                "Lowest",
                "First",
                "Average"
              ]
            },
            "schemaId": {
              "type": "string",
              "description": "The ID of the grade schema associated with this grade column. Mutable since 3400.2.0\n\n**Since**: 3200.13.0"
            },
            "anonymousGrading": {
              "type": "object",
              "description": "Settings for anonymous grading",
              "title": "AnonymousGrading",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of AnonymousGrading settings for this Attempts based Grade Column.\n\n\n| Type      | Description\n | --------- | --------- |\n| None | Indicates anonymous grading is not enabled. |\n| AfterAllGraded | Indicates anonymized grades are released after all attempts have been graded. |\n| Date | Indicates anonymized grades are released after a specified release date. |\n",
                  "enum": [
                    "None",
                    "AfterAllGraded",
                    "Date"
                  ]
                },
                "releaseAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date after which grades are released from being anonymized, if AnonymousGrading type is 'Date'."
                }
              }
            }
          }
        },
        "gradebookCategoryId": {
          "type": "string",
          "description": "The gradebook category ID for the grade column.\n\n**Since**: 3400.2.0"
        },
        "formula": {
          "description": "The formula used for determining the value for the grade column, if it is a calculated column.\n\n**Since**: 3400.5.0",
          "$ref": "#/definitions/GradingFormulaV2"
        },
        "includeInCalculations": {
          "type": "boolean",
          "description": "Indicates whether or not this column is included in gradebook calculations. Cannot be set for Ultra courses. Default: true\n\n**Since**: 3800.4.0"
        },
        "showStatisticsToStudents": {
          "type": "boolean",
          "description": "Indicates whether or not column statistics are shown to students. Read-only for Ultra courses. Default: false\n\n**Since**: 3800.4.0"
        },
        "scoreProviderHandle": {
          "type": "string",
          "description": "The score provider handle for the grade column.\n\n**Since**: 3900.3.0",
          "readOnly": true
        }
      }
    },
    "GradeNotation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary key of the grade notation.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "The performance code associated with the grade notation."
        },
        "description": {
          "type": "string",
          "description": "The description of the grade notation."
        }
      }
    },
    "GradeSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id associated with this grade schema.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "The externalId associated with this grade schema."
        },
        "title": {
          "type": "string",
          "description": "The title of this grade schema."
        },
        "description": {
          "type": "string",
          "description": "The description of this grade schema."
        },
        "scaleType": {
          "type": "string",
          "description": "The scale type of this grade schema.\n\n\n| Type      | Description\n | --------- | --------- |\n| Percent |  |\n| Score |  |\n| Tabular |  |\n| Text |  |\n| CompleteIncomplete |  |\n",
          "readOnly": true,
          "enum": [
            "Percent",
            "Score",
            "Tabular",
            "Text",
            "CompleteIncomplete"
          ]
        },
        "symbols": {
          "type": "array",
          "description": "The list of grade symbols for this grade schema. Only returned for Tabular scaleType schemas.",
          "items": {
            "$ref": "#/definitions/GradeSymbol"
          }
        }
      }
    },
    "GradeSymbol": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of this grade symbol."
        },
        "absoluteValue": {
          "type": "number",
          "description": "The absoluteValue of this grade symbol."
        },
        "lowerBound": {
          "type": "number",
          "description": "The lowerBound of this grade symbol."
        },
        "upperBound": {
          "type": "number",
          "description": "The upperBound of this grade symbol."
        }
      }
    },
    "GradeV2": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The user ID associated with this grade.",
          "readOnly": true
        },
        "columnId": {
          "type": "string",
          "description": "The grade column ID for this grade.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of this grade.\n\n\n| Type      | Description\n | --------- | --------- |\n| Graded | Grade has been graded, corresponding to dbValue 1 |\n| NeedsGrading | Grade needs grading, corresponding to dbValue 2 |\n",
          "readOnly": true,
          "enum": [
            "Graded",
            "NeedsGrading"
          ]
        },
        "displayGrade": {
          "description": "The primary display grade associated with this grade. Secondary display grade is not exposed via API",
          "$ref": "#/definitions/DisplayGrade"
        },
        "text": {
          "type": "string",
          "description": "The overridden text representation of this grade. This field is only used for overriding the grade via text value"
        },
        "score": {
          "type": "number",
          "description": "The overridden score of this grade. This field is only used for overriding the grade"
        },
        "overridden": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the score associated with this grade was last overridden.  An ISODate value is only returned if this grade is currently overridden; otherwise, returns null.",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "description": "The instructor notes associated with this grade. This notes field is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden."
        },
        "feedback": {
          "type": "string",
          "description": "The instructor feedback associated with this grade.  This feedback is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden."
        },
        "exempt": {
          "type": "boolean",
          "description": "Whether the score associated with this grade is ignored when computing the course grade."
        },
        "corrupt": {
          "type": "boolean",
          "description": "Whether the grade for a calculated column could be successfully computed.",
          "readOnly": true
        },
        "gradeNotationId": {
          "type": "string",
          "description": "The Id of a Grade Notation which can be optionally associated with this Grade. If a Grade Notation is specified for this Grade, then the DisplayGrade's Text attribute will contain the Grade Notation's Description."
        },
        "changeIndex": {
          "type": "integer",
          "format": "int64",
          "description": "The change index associated with this grade which indicates what relative point in time the grade was created or last updated.",
          "readOnly": true
        }
      }
    },
    "GradebookCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this gradebook category\n\n**Since**: 3400.2.0",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of this gradebook category, localized if applicable\n\n**Since**: 3400.2.0"
        }
      }
    },
    "GradingFormulaV2": {
      "type": "object",
      "properties": {
        "formula": {
          "type": "string",
          "readOnly": true
        },
        "aliases": {
          "type": "object",
          "example": {
            "key1": "value1",
            "key2": "value2"
          },
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GradingPeriod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The REST Id object that uniquely identifies this grading period for REST usage",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of the grading period. Length is limited to 64 characters."
        },
        "description": {
          "type": "string",
          "description": "The description of the grading period. Length is limited to 1000 characters."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The relative position of the grading period to other grading periods when viewed in the grade book."
        },
        "dateMode": {
          "type": "string",
          "description": "Property may be set to DoNotUseDates to explicitly blank dates,  in which case startDate and endDate are ignored; otherwise set to  UseDates; in this case startDate and endDate must be included and valid.\n\n\n| Type      | Description\n | --------- | --------- |\n| DoNotUseDates | Do not use dates |\n| UseDates | Use dates |\n",
          "enum": [
            "DoNotUseDates",
            "UseDates"
          ]
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. Start dates will be persisted as starting at  00:00:00 on the submitted day."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. End dates will be persisted as ending at  23:59:59 on the submitted day."
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the group.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "An externally-defined unique ID for the group. Defaults to a random UUID if not provided during create."
        },
        "parentId": {
          "type": "string",
          "description": "The primary ID of the group's parent group set."
        },
        "name": {
          "type": "string",
          "description": "The title of the group."
        },
        "description": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The description of the group. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "isGroupSet": {
          "type": "boolean",
          "description": "Whether or not this is a group set.\n\n**Since**: 3700.1.0",
          "readOnly": true
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the group to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the Group is currently available to students.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may access the group. |\n| No | Students may not access the group. |\n| SignupOnly | Students may only signup and see the group listed, not yet access it. |\n",
              "enum": [
                "Yes",
                "No",
                "SignupOnly"
              ]
            }
          }
        },
        "enrollment": {
          "type": "object",
          "description": "Settings controlling enrollment of the group to students.",
          "title": "Enrollment",
          "properties": {
            "type": {
              "type": "string",
              "description": "Whether the Group allows self enrollment or only enrolled by instructor. This can only be set on creation.\n\n\n| Type      | Description\n | --------- | --------- |\n| InstructorOnly | Students are added to the Group by the instructor |\n| SelfEnrollment | Students are added to the Group by self enrollment |\n",
              "readOnly": true,
              "enum": [
                "InstructorOnly",
                "SelfEnrollment"
              ]
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed enrollment size for self enrolled groups."
            },
            "signupSheet": {
              "type": "object",
              "description": "Settings controlling signup to the group for students. Only applicable if Enrollment.Type allows self enrollment.",
              "title": "SignupSheet",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the signup sheet"
                },
                "description": {
                  "type": "string",
                  "format": "BbML",
                  "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
                  "description": "The description of the signup sheet This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
                },
                "showMembers": {
                  "type": "boolean",
                  "description": "A boolean indicating whether or not members can be seen by others prior to signing up."
                }
              }
            }
          }
        },
        "uuid": {
          "type": "string",
          "description": "A system-wide unique identifier created by Learn\n\n**Since**: 3700.7.0",
          "readOnly": true
        }
      }
    },
    "GroupMembership": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The user Id associated with this GroupMembership. See [Group Membership](#group-membership--dependency)#`getUserId`"
        },
        "user": {
          "description": "The user associated with this GroupMembership.\n\nShown when adding the query parameter: \"expand=user\". And can be filtered with the \"fields\" query parameter, for example \"fields=user.uuid\".\n\n**Since**: 3900.19.0",
          "$ref": "#/definitions/TemporaryUser"
        }
      }
    },
    "GroupV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the group.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "An externally-defined unique ID for the group. Defaults to a random UUID if not provided during create."
        },
        "groupSetId": {
          "type": "string",
          "description": "The primary ID of the group's parent group set.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The title of the group."
        },
        "description": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The description of the group. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the group to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the Group is currently available to students.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may access the group. |\n| No | Students may not access the group. |\n| SignupOnly | Students may only signup and see the group listed, not yet access it. |\n",
              "enum": [
                "Yes",
                "No",
                "SignupOnly"
              ]
            }
          }
        },
        "enrollment": {
          "type": "object",
          "description": "Settings controlling enrollment of the group to students.",
          "title": "Enrollment",
          "properties": {
            "type": {
              "type": "string",
              "description": "Whether the Group allows self enrollment or only enrolled by instructor. This can only be set on creation.\n\n\n| Type      | Description\n | --------- | --------- |\n| InstructorOnly | Students are added to the Group by the instructor |\n| SelfEnrollment | Students are added to the Group by self enrollment |\n",
              "readOnly": true,
              "enum": [
                "InstructorOnly",
                "SelfEnrollment"
              ]
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed enrollment size for self enrolled groups."
            },
            "signupSheet": {
              "type": "object",
              "description": "Settings controlling signup to the group for students. Only applicable if Enrollment.Type allows self enrollment.",
              "title": "SignupSheet",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the signup sheet"
                },
                "description": {
                  "type": "string",
                  "format": "BbML",
                  "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
                  "description": "The description of the signup sheet This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
                },
                "showMembers": {
                  "type": "boolean",
                  "description": "A boolean indicating whether or not members can be seen by others prior to signing up."
                }
              }
            }
          }
        },
        "uuid": {
          "type": "string",
          "description": "A system-wide unique identifier created by Learn",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Created date of the group\n\n**Since**: 3800.8.0",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "Modified date of the group\n\n**Since**: 3800.8.0",
          "readOnly": true
        }
      }
    },
    "HierarchyNodeCourse": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "The primary ID of the Hierarchy Node",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "The primary ID of the Course",
          "readOnly": true
        },
        "course": {
          "$ref": "#/definitions/CourseV2"
        },
        "isPrimary": {
          "type": "boolean",
          "description": "Whether or not this association represents the primary node association of the course"
        }
      }
    },
    "HierarchyNodeUser": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "The primary ID of the Hierarchy Node",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The primary ID of the User",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "InstitutionRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id associated with this institution role.",
          "readOnly": true
        },
        "roleId": {
          "type": "string",
          "description": "The String role key associated with this institution role.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The title of this institution role."
        },
        "description": {
          "type": "string",
          "description": "The description of this institution role."
        },
        "custom": {
          "type": "boolean",
          "description": "Indicates if this institution role is custom.",
          "readOnly": true
        }
      }
    },
    "InstitutionalHierarchyTool": {
      "type": "object",
      "properties": {
        "toolId": {
          "type": "string",
          "description": "Id of the Tool.",
          "readOnly": true
        },
        "nodeId": {
          "type": "string",
          "description": "Id of the Institutional Hierarchy Node.",
          "readOnly": true
        },
        "tool": {
          "description": "Tool label containing tool`s name, application label and type.",
          "$ref": "#/definitions/ToolLabel"
        },
        "toolSettings": {
          "description": "General Tool Settings.",
          "$ref": "#/definitions/SettingsAttribute"
        },
        "guestSettings": {
          "description": "Tool Settings for a guest user.",
          "$ref": "#/definitions/SettingsAttribute"
        },
        "observerSettings": {
          "description": "Tool Settings for an observer user.",
          "$ref": "#/definitions/SettingsAttribute"
        }
      }
    },
    "LTIDomainConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with this domainConfig.",
          "readOnly": true
        },
        "primaryDomain": {
          "type": "string",
          "description": "The primary domain name associated with this configuration."
        },
        "clientId": {
          "type": "string",
          "description": "The client id associated with this configuration. Only applicable for LTI versions 1.3+, excluding 2.0\n\n**Since**: 3600.0.0"
        },
        "status": {
          "type": "string",
          "description": "Enum that indicates if the set of domains associated with this config can or cannot be linked to.\n\n\n| Type      | Description\n | --------- | --------- |\n| Approved |  |\n| Excluded |  |\n| NeedsApproval |   **Since**: 3300.9.0 |\n",
          "enum": [
            "Approved",
            "Excluded",
            "NeedsApproval"
          ]
        },
        "perLinkCredentials": {
          "type": "boolean",
          "description": "If true, a new link to this LTI domain must supply its own key and secret. If false, the key and secret for this domain are already configured system-wide. This is a read-only property that is determined by the presence of a key and secret.",
          "readOnly": true
        },
        "sendUserDataType": {
          "type": "string",
          "description": "Enum indicating when user data can be sent to the LTI tool provider.\n\n\n| Type      | Description\n | --------- | --------- |\n| Never |  |\n| Sslonly |  |\n| Always |   **Since**: 3300.9.0 |\n",
          "enum": [
            "Never",
            "Sslonly",
            "Always"
          ]
        },
        "sendRole": {
          "type": "boolean",
          "description": "Whether the user's role can be sent to the LTI tool provider."
        },
        "sendName": {
          "type": "boolean",
          "description": "Whether the user's name can be sent to the LTI tool provider."
        },
        "sendEmail": {
          "type": "boolean",
          "description": "Whether the user's email address can be sent to the LTI tool provider."
        },
        "useSplashScreen": {
          "type": "boolean",
          "description": "Whether a splash screen is shown before launching the LTI link.\n\nCannot be set to true if allowMembershipService is true."
        },
        "allowMembershipService": {
          "type": "boolean",
          "description": "Whether the Tool is allowed to call the LTI Names and Roles service and get the course memberships."
        },
        "allowGradesService": {
          "type": "boolean",
          "description": "Whether the Tool is allowed to call the LTI Assignment and Grades service and manage line items and grades.\n\n**Since**: 3600.0.0"
        },
        "publicKey": {
          "type": "string",
          "description": "The public key of the tool, if specified. It is optional and can be null\n\n**Since**: 3800.17.0"
        },
        "jwksUrl": {
          "type": "string",
          "description": "The JWKS URL of the tool, if specified. It is optional and can be null\n\n**Since**: 3800.17.0"
        },
        "allowEdit": {
          "type": "boolean",
          "description": "Whether this domain configuration is editable by system admins. The \"internal\" apps created by Blackboard are non-editable. They are created or updated automatically or via Dev Portal, and they are locked to system admins or anyone with public REST access to change them.\n\n**Since**: 3800.17.0",
          "readOnly": true
        },
        "customParameters": {
          "type": "object",
          "example": {
            "key1": "value1",
            "key2": "value2"
          },
          "description": "The custom parameters for the given domain.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the domain configuration\n\n**Since**: 3900.23.0"
        },
        "description": {
          "type": "string",
          "description": "The description of the domain configuration\n\n**Since**: 3900.23.0"
        }
      }
    },
    "LTIPlacement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with this placement.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the placement. Not required to be unique. Maximum length of 50 characters, BAD_REQUEST error with message is returned if greater than 50 characters.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The description of the placement. Not required to be unique. Maximum length is 1000 characters, BAD_REQUEST error with message is returned if greater than 1000 characters.",
          "maxLength": 1000
        },
        "iconUrl": {
          "type": "string",
          "description": "The URL of the icon for this placement, if any. Not required to be unique, must be a complete and valid URL. Maximum length is 255 characters, BAD_REQUEST error with message is returned if greater than 255 characters or incomplete URL.",
          "maxLength": 255
        },
        "handle": {
          "type": "string",
          "description": "The handle that uniquely identifies this placement. Required to be unique. Maximum length is 32 characters, BAD_REQUEST error with message is returned if greater than 32 characters.",
          "readOnly": true,
          "maxLength": 32
        },
        "type": {
          "type": "string",
          "description": "The type of placement.\n\n\n| Type      | Description\n | --------- | --------- |\n| Application | Application or Student Tool Placement |\n| ContentHandler | Content Type placement |\n| ContentItemMessage | Content-item Message placement (see IMSGlobal spec)  **Since**: 3300.5.0 |\n| System | System-level Tools |\n| Administrator | Administrator-level Tools  **Since**: 3400.1.0 |\n| UltraUI | Ultra-UI Extensions  **Since**: 3700.6.0 |\n| BaseNavigation | Base Navigation |\n| CourseNavigation | Course Navigation |\n| Proctoring | Proctoring  **Since**: 3900.10.0 |\n| CloudDocument | Cloud Document Type Placement  **Since**: 3900.34.0 |\n",
          "readOnly": true,
          "enum": [
            "Application",
            "ContentHandler",
            "ContentItemMessage",
            "System",
            "Administrator",
            "UltraUI",
            "BaseNavigation",
            "CourseNavigation",
            "Proctoring",
            "CloudDocument"
          ]
        },
        "url": {
          "type": "string",
          "description": "The URL of the tool provider. Not required to be unique, must be a complete and valid URL. Maximum length is 1024 characters, BAD_REQUEST error with message is returned if greater than 1024 characters or incomplete URL.",
          "maxLength": 1024
        },
        "authorId": {
          "type": "string",
          "description": "Id of the creator of the placement\n\n**Deprecated**: since 3900.0 not used"
        },
        "instructorCreated": {
          "type": "boolean",
          "description": "Whether an instructor created the placement or not (otherwise admin)\n\n**Deprecated**: since 3900.0 not used"
        },
        "allowStudents": {
          "type": "boolean",
          "description": "Whether the course tool is visible by students, or only to non-students (e.g. instructors). Defaults to true, allowing students to see the tool."
        },
        "allowGrading": {
          "type": "boolean",
          "description": "Whether this placement can accept grades from the tool provider and a grade column can be created for it. This only applies to Enum[Type]#`ContentHandler` types. All others don't support grading and will be set to false."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the placement.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the placement is available within the system.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n",
              "enum": [
                "Yes",
                "No"
              ]
            }
          }
        },
        "launchInNewWindow": {
          "type": "boolean",
          "description": "Whether this placement link should be opened in a new window or not."
        },
        "launchLink": {
          "type": "string",
          "description": "Generated launch link",
          "readOnly": true
        },
        "customParameters": {
          "type": "object",
          "example": {
            "key1": "value1",
            "key2": "value2"
          },
          "description": "Custom launch parameters for the tool.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domainId": {
          "type": "string",
          "description": "The Id of the domain configuration associated with this placement\n\n**Since**: 3900.46.0",
          "readOnly": true
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Contains a target Internationalized Resource Identifiers (IRIs)",
          "readOnly": true
        },
        "rel": {
          "type": "string",
          "description": "Describes how the current context is related to the target resource.\n\nSupported values: \n\n | Relation Type | Media Type  | Functionality                                | Since    |\n |---------------|-------------|----------------------------------------------|----------|\n | \"alternate\"   |  text/html  | Links to the UI representation of a resource | 3900.0.0 |\n ",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title attributes for the target IRI",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Format attributes for the target IRI",
          "readOnly": true
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Id of the message.",
          "readOnly": true
        },
        "discussionId": {
          "type": "string",
          "description": "The Id of the discussion.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The Id of the parent message.",
          "readOnly": true
        },
        "threadId": {
          "type": "string",
          "description": "The Id of the message thread.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The Id of the user who created the message.",
          "readOnly": true
        },
        "groupId": {
          "type": "string",
          "description": "The Id of the group, only set for group discussions.",
          "readOnly": true
        },
        "givenName": {
          "type": "string",
          "description": "Given name of the user who created the message.",
          "readOnly": true
        },
        "familyName": {
          "type": "string",
          "description": "Family name of the user who created the message.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the message.\n\n\n| Type      | Description\n | --------- | --------- |\n| Published | Message is published in the discussion and visible for all users. |\n| Deleted | Message is shown in the discussion as soft-deleted. |\n| Draft | Message is stored as a draft and only visible for the author user. |\n",
          "enum": [
            "Published",
            "Deleted",
            "Draft"
          ]
        },
        "body": {
          "type": "string",
          "description": "Body of the message, in BbML format."
        },
        "postDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date in which the message was posted.",
          "readOnly": true
        },
        "editDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last Date in which the message was edited.",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date in which the message was created.",
          "readOnly": true
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last Date in which the message was modified.",
          "readOnly": true
        },
        "isRead": {
          "type": "boolean",
          "description": "Whether the user in context has read the message.",
          "readOnly": true
        }
      }
    },
    "Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the Node in the database",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "Node unique identifier",
          "maxLength": 256
        },
        "title": {
          "type": "string",
          "description": "Node display name",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Node description",
          "maxLength": 1000
        },
        "parentId": {
          "type": "string",
          "description": "The ID of the Node parent in the database",
          "readOnly": true
        }
      }
    },
    "NodeAdmin": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "Id of the Node.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "Id of the Node Admin User.",
          "readOnly": true
        },
        "user": {
          "description": "Expanded User object of the Node Admin. This is only a sparsely populated User object and must not be used in future calls to update a user object.",
          "$ref": "#/definitions/User"
        },
        "nodeRoles": {
          "type": "array",
          "description": "List of roles the Admin User has within the Node.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OAuth2AccessToken": {
      "type": "object",
      "required": [
        "expires_in"
      ],
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The access token issued by the authorization server."
        },
        "token_type": {
          "type": "string",
          "description": "The type of the token issued.  Value is case insensitive."
        },
        "expires_in": {
          "type": "integer",
          "format": "int32",
          "description": "The lifetime in seconds of the access token."
        },
        "refresh_token": {
          "type": "string",
          "description": "The refresh token issued by the authorization server during OAuth2 authorization code workflow if 'offline' scope was granted."
        },
        "scope": {
          "type": "string",
          "description": "The scope of the access granted by this token."
        },
        "user_id": {
          "type": "string",
          "description": "The ID of the user granted access via token"
        }
      }
    },
    "OAuth2AccessTokenInfo": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "description": "The ID of the registered third party application."
        },
        "scope": {
          "type": "string",
          "description": "The scope of the access granted by this token."
        }
      }
    },
    "OAuth2Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error code indicating high level source of error\n\n\n| Type      | Description\n | --------- | --------- |\n| invalid_request | The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed. |\n| invalid_client | Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method).  The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported.  If the client attempted to authenticate via the 'Authorization' request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code and include the 'WWW-Authenticate' response header field matching the authentication scheme used by the client. |\n| invalid_grant | The provided authorization grant (e.g., authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client. |\n| unauthorized_client | The authenticated client is not authorized to use this authorization grant type. |\n| unsupported_grant_type | The authorization grant type is not supported by the authorization server. |\n| invalid_scope | The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner. |\n| unsupported_response_type | The authorization server does not support obtaining an authorization code using this method. |\n| server_error | The authorization server encountered an unexpected condition that prevented it from fulfilling the request. (This error code is needed because a 500 Internal Server Error HTTP status code cannot be returned to the client via a HTTP redirect.) |\n",
          "enum": [
            "invalid_request",
            "invalid_client",
            "invalid_grant",
            "unauthorized_client",
            "unsupported_grant_type",
            "invalid_scope",
            "unsupported_response_type",
            "server_error"
          ]
        },
        "error_description": {
          "type": "string",
          "description": "Optional text providing additional information about the error condition."
        }
      }
    },
    "OriginalityReportingTool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Originality Reporting Tools handler id.",
          "readOnly": true
        }
      }
    },
    "PagingInfo": {
      "type": "object",
      "properties": {
        "nextPage": {
          "type": "string",
          "description": "The URL to use to navigate to the next page of results.  This field may be omitted when there is no additional data available."
        }
      }
    },
    "PrivacyPolicy": {
      "type": "object",
      "properties": {
        "blackboard": {
          "type": "string",
          "description": "Set the URL of the Blackboard privacy policy"
        },
        "institution": {
          "type": "string",
          "description": "Set the institution's privacy policy URL"
        }
      }
    },
    "ProctoringService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with this proctoring service.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the proctoring service."
        },
        "handle": {
          "type": "string",
          "description": "The handle that uniquely identifies this proctoring service.",
          "readOnly": true
        },
        "vendor": {
          "type": "string",
          "description": "The vendors of the proctoring service.\n\n\n| Type      | Description\n | --------- | --------- |\n| Respondus | Respondus |\n| Internal | For internal testing only.  For use with tests which require multiple proctoring services. |\n| Lti | LTI Proctoring Placement  **Since**: 3900.12.0 |\n",
          "readOnly": true,
          "enum": [
            "Respondus",
            "Internal",
            "Lti"
          ]
        },
        "assessmentSettingsUrl": {
          "type": "string",
          "description": "The url for the vendors assessment settings LTI tool."
        },
        "assessmentSettingsCustomParameters": {
          "type": "object",
          "example": {
            "key1": "value1",
            "key2": "value2"
          },
          "description": "Custom launch parameters for the vendors assessment settings LTI tool.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "browserDownloadUrl": {
          "type": "string",
          "description": "The download url for the vendors secure browser."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the proctoring service.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the proctoring service is available within the system.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n",
              "enum": [
                "Yes",
                "No"
              ]
            }
          }
        }
      }
    },
    "Pronoun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with this pronoun.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the pronoun.",
          "maxLength": 100
        },
        "status": {
          "type": "string",
          "description": "The status of the pronoun.\n\n\n| Type      | Description\n | --------- | --------- |\n| Pending |  |\n| Approved |  |\n",
          "enum": [
            "Pending",
            "Approved"
          ]
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the question.",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of the question."
        },
        "text": {
          "type": "string",
          "description": "The main text content for the question. It may include plain and formatted text, and all kinds of content supported by the full text editor."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Position of the Question on the Assessment Canvas."
        },
        "points": {
          "type": "number",
          "description": "The point value for the question."
        },
        "correctResponseFeedback": {
          "type": "string",
          "description": "Feedback displayed to students when their submitted response is correct."
        },
        "incorrectResponseFeedback": {
          "type": "string",
          "description": "Feedback displayed to students when their submitted response is incorrect."
        },
        "instructorNotes": {
          "type": "string",
          "description": "Text added to the question as a note for the instructor. It is not intended to be displayed to students."
        },
        "questionHandler": {
          "$ref": "#/definitions/QuestionHandler"
        }
      }
    },
    "QuestionHandler": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of Question supported.\n\n\n| Type      | Description\n | --------- | --------- |\n| Presentation |   **Since**: 3300.9.0 |\n| EitherOr | Read Only  **Since**: 3300.9.0 |\n| Essay | Read Only  **Since**: 3300.9.0 |\n| MultipleAnswer | Read Only  **Since**: 3400.4.0 |\n| Numeric | Read Only  **Since**: 3400.4.0 |\n| MultipleChoice | Read Only  **Since**: 3400.4.0 |\n| Ordering | Read Only  **Since**: 3400.4.0 |\n| Matching | Read Only  **Since**: 3400.4.0 |\n| FillInTheBlank | Read Only  **Since**: 3400.4.0 |\n| Calculated | Read Only  **Since**: 3400.4.0 |\n| FileResponse | Read Only  **Since**: 3400.4.0 |\n| LikertOpinionScale | Read Only  **Since**: 3400.4.0 |\n| QuizBowl | Read Only  **Since**: 3400.4.0 |\n| HotSpot | Read Only  **Since**: 3400.4.0 |\n| JumbledSentence | Read Only  **Since**: 3400.4.0 |\n| FillInTheBlankPlus | Read Only  **Since**: 3400.4.0 |\n| QuestionBlock | Read Only  **Since**: 3700.2.0 |\n",
          "readOnly": true,
          "enum": [
            "Presentation",
            "EitherOr",
            "Essay",
            "MultipleAnswer",
            "Numeric",
            "MultipleChoice",
            "Ordering",
            "Matching",
            "FillInTheBlank",
            "Calculated",
            "FileResponse",
            "LikertOpinionScale",
            "QuizBowl",
            "HotSpot",
            "JumbledSentence",
            "FillInTheBlankPlus",
            "QuestionBlock"
          ]
        }
      }
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID the Resource.",
          "readOnly": true
        },
        "xid": {
          "type": "string",
          "description": "The primary ID of the resource in xythos format.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the Resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the Resource; 'File' or 'Folder'\n\n\n| Type      | Description\n | --------- | --------- |\n| File |  |\n| Folder |  |\n",
          "readOnly": true,
          "enum": [
            "File",
            "Folder"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the Resource in bytes.",
          "readOnly": true
        },
        "hasLinks": {
          "type": "boolean",
          "description": "Whether the Resource has associated Course Content links.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The Id of the Resource's parent folder.",
          "readOnly": true
        },
        "creatorId": {
          "type": "string",
          "description": "The Id of the User who created the Resource.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this Resource was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this Resource was last modified.",
          "readOnly": true
        },
        "mimeType": {
          "type": "string",
          "description": "The mime-type for this Resource; only set if the Resource is of type 'File'"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version number for this Resource; only set if the Resource is of type 'File' and is versioned.",
          "readOnly": true
        },
        "downloadUrl": {
          "type": "string",
          "description": "The downloadUrl for this Resource; only set if the Resource is of type 'File'.",
          "readOnly": true
        }
      }
    },
    "RestException": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "Represents HTTP Status code in the response header."
        },
        "code": {
          "type": "string",
          "description": "The error code specific to a particular REST API. It is usually something that conveys information specific to the problem domain. For cases where the HTTP Status code conveys all the information required (such as a 404-Not Found) then the code may be omitted."
        },
        "message": {
          "type": "string",
          "description": "Error message that should be easy to understand and convey a concise reason as to why the error occurred"
        },
        "developerMessage": {
          "type": "string",
          "description": "Represents any technical information that a developer calling REST API might find useful."
        },
        "extraInfo": {
          "type": "string",
          "description": "Indicates a URL that anyone seeing the error message can click in a browser. The target web page should describe the error condition fully, as well as potential solutions to help them resolve the error condition"
        }
      }
    },
    "ReviewStatus": {
      "type": "object",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "The ID of the content.\n\n**Since**: 3700.16.0",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user.\n\n**Since**: 3700.16.0",
          "readOnly": true
        },
        "reviewed": {
          "type": "boolean",
          "description": "The current status of the content's 'reviewed' attribute.\n\n**Since**: 3700.16.0"
        },
        "reviewDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the user marked the content as reviewed\n\n**Since**: 3700.16.0",
          "readOnly": true
        }
      }
    },
    "RubricDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Get the Id associated to this rubric (Ex. '_2_1')",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "Get the Id from the course associated to this rubric (Ex. '_3_1')",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Get the title for this rubric (Ex. 'Sample Rubric')"
        },
        "description": {
          "type": "string",
          "description": "Get the description for this rubric (Ex. 'A rubric for base evluation template')"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Get the creation date for this rubric (Ex. '2022-01-01')",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "Get the nearest modification date for this rubric (Ex. '2022-01-01')",
          "readOnly": true
        },
        "rubricType": {
          "type": "string",
          "description": "Get the rubric type, alas Numeric or Percentage type. (Ex. 'Numeric', 'Percentage', 'Percentage Range', 'Numeric Range')\n\n\n| Type      | Description\n | --------- | --------- |\n| Numeric |  |\n| Nonnumeric |  |\n| NumericRange |  |\n| Percentage |  |\n| PercentageRange |  |\n",
          "enum": [
            "Numeric",
            "Nonnumeric",
            "NumericRange",
            "Percentage",
            "PercentageRange"
          ]
        },
        "readOnly": {
          "type": "boolean",
          "description": "Wheater a rubric is read-only or not. Rubric assigned to an already graded content should be read-only.",
          "readOnly": true
        }
      }
    },
    "SISLogEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the log message",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "log message created date",
          "readOnly": true
        },
        "level": {
          "type": "string",
          "description": "An enumerated value of LogLevel describing log verbosity level\n\n\n| Type      | Description\n | --------- | --------- |\n| Debug |  |\n| Information |  |\n| Warning |  |\n| Error |  |\n",
          "readOnly": true,
          "enum": [
            "Debug",
            "Information",
            "Warning",
            "Error"
          ]
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the session.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the session started.",
          "readOnly": true
        },
        "lastAccess": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the session was last accessed.",
          "readOnly": true
        },
        "mobile": {
          "type": "boolean",
          "description": "Indicates whether this is a mobile session.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "Id of the logged in user.",
          "readOnly": true
        },
        "user": {
          "description": "Full information of the logged user. This is only set if the caller requests to expand the user information.",
          "$ref": "#/definitions/User"
        }
      }
    },
    "SettingsAttribute": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Whether the tool is available."
        },
        "locked": {
          "type": "boolean",
          "description": "Whether the tool is locked."
        },
        "applicable": {
          "type": "boolean",
          "description": "Whether the available and locked settings are applicable."
        }
      }
    },
    "SystemRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id associated with this system role.",
          "readOnly": true
        },
        "roleId": {
          "type": "string",
          "description": "The identifier used to assign the system role.\n\nFor system generated roles, this value will be one of AccountAdmin, CourseCreator, CourseSupport, Guest, Integration, Observer, Portal, SystemAdmin, SystemSupport, or User\n\nFor custom system roles, this will be the roleId entered during the creation of the role. Allowed characters for the custom roleId's are any letter, number, period, underscore and dash.",
          "readOnly": true,
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "maxLength": 64
        },
        "description": {
          "type": "string",
          "description": "The description of this system role.",
          "maxLength": 1000
        },
        "custom": {
          "type": "boolean",
          "description": "Indicates if this system role is custom.",
          "readOnly": true
        }
      }
    },
    "SystemRoleEnum": {
      "type": "string",
      "properties": {},
      "enum": [
        "SystemAdmin",
        "SystemSupport",
        "CourseCreator",
        "CourseSupport",
        "AccountAdmin",
        "Guest",
        "User",
        "Observer",
        "Integration",
        "Portal"
      ]
    },
    "SystemTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this task.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type value associated with the task.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the task.\n\n\n| Type      | Description\n | --------- | --------- |\n| Queued | initial state of a task |\n| Assigned |  |\n| Running |  |\n| Complete |  |\n| CompleteWithErrors |  |\n| Incomplete |  |\n",
          "readOnly": true,
          "enum": [
            "Queued",
            "Assigned",
            "Running",
            "Complete",
            "CompleteWithErrors",
            "Incomplete"
          ]
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Task progress, with 0 representing not started and 100 representing done.",
          "readOnly": true
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "The date the task was started.",
          "readOnly": true
        },
        "ended": {
          "type": "string",
          "format": "date-time",
          "description": "The date the task was completed.",
          "readOnly": true
        },
        "results": {
          "description": "The results of the task execution. This may be null if execution is not yet complete or no results were saved.",
          "$ref": "#/definitions/SystemTaskResult"
        }
      }
    },
    "SystemTaskResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier used to determine type of the system task result."
        }
      }
    },
    "TemporaryUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the user.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "A secondary unique ID for the user. Used by LTI launches and other inter-server operations.",
          "readOnly": true
        }
      }
    },
    "Term": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the term.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "An externally-defined unique ID for the term.\n\nFormerly known as 'sourcedidId'.",
          "maxLength": 256
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this term.  This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "name": {
          "type": "string",
          "description": "The name of the term.",
          "maxLength": 333
        },
        "description": {
          "type": "string",
          "format": "BbML",
          "example": "<!-- {\"bbMLEditorVersion\":1} --><div data-bbid=\"bbml-editor-id_9c6a9556-80a5-496c-b10d-af2a9ab22d45\"> <h4>Header Large</h4>  <h5>Header Medium</h5>  <h6>Header Small</h6>  <p><strong>Bold&nbsp;</strong><em>Italic&nbsp;<span style=\"text-decoration: underline;\">Italic Underline</span></em></p> <ul>   <li><span style=\"text-decoration: underline;\"><em></em></span>Bullet 1</li>  <li>Bullet 2</li> </ul> <p>  <img src=\"@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1217_1\">   <span>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span> </p>  <p><span>&lt;braces test=\"values\" other=\"strange things\"&gt;</span></p> <p>Header Small</p> <ol>   <li>Number 1</li>   <li>Number 2</li> </ol>  <p>Just words followed by a formula</p>  <p><img align=\"middle\" alt=\"3 divided by 4 2 root of 7\" class=\"Wirisformula\" src=\"@X@EmbeddedFile.requestUrlStub@X@sessions/EA5F7FF3DF32D271D0E54AF0150D924A/anonymous/wiris/49728c9f5b4091622e2f4d183d857d35.png\" data-mathml=\"«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mn»3«/mn»«mo»/«/mo»«mn»4«/mn»«mroot»«mn»7«/mn»«mn»2«/mn»«/mroot»«/math»\"></p> <p><a href=\"http://www.blackboard.com\">Blackboard</a></p> </div>",
          "description": "The description of the term. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/rest/advanced/bbml.html'>here</a> for more information."
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the term to students.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the term and the courses it contains are available to students.  Instructors can always access their courses.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes | Students may access the term and the courses it contains. |\n| No | Students may not access the term or the courses it contains. |\n",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "duration": {
              "type": "object",
              "description": "Settings controlling the length of time the term is available.",
              "title": "Duration",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The intended length of the term.  Possible values are:\n\n\n| Type      | Description\n | --------- | --------- |\n| Continuous | The term is active on an ongoing basis. This is the default. |\n| DateRange | The term will only be available between specific date ranges. |\n| FixedNumDays | The term will only be available for a set number of days. |\n",
                  "enum": [
                    "Continuous",
                    "DateRange",
                    "FixedNumDays"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this term starts.  May only be set if availability.duration.type is DateRange."
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date this term ends.  May only be set if availability.duration.type is DateRange."
                },
                "daysOfUse": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of days courses within this term can be used.  May only be set if availability.duration.type is FixedNumDays."
                }
              }
            }
          }
        }
      }
    },
    "ToolLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Tool.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Application label of the Tool.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Tool Type. Supported values are: Course Type, Organization Type and Content Type.",
          "readOnly": true
        }
      }
    },
    "Topic": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "description": "Body of the message, in BbML format."
        },
        "groupId": {
          "type": "string",
          "description": "The Id of the group, only set for group discussions.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the message.\n\n\n| Type      | Description\n | --------- | --------- |\n| Published | Message is published in the discussion and visible for all users. |\n| Deleted | Message is shown in the discussion as soft-deleted. |\n| Draft | Message is stored as a draft and only visible for the author user. |\n",
          "readOnly": true,
          "enum": [
            "Published",
            "Deleted",
            "Draft"
          ]
        },
        "id": {
          "type": "string",
          "description": "The Id of the message.",
          "readOnly": true
        },
        "discussionId": {
          "type": "string",
          "description": "The Id of the discussion.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "The Id of the parent message.",
          "readOnly": true
        },
        "threadId": {
          "type": "string",
          "description": "The Id of the message thread.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The Id of the user who created the message.",
          "readOnly": true
        },
        "givenName": {
          "type": "string",
          "description": "Given name of the user who created the message.",
          "readOnly": true
        },
        "familyName": {
          "type": "string",
          "description": "Family name of the user who created the message.",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date in which the message was created.",
          "readOnly": true
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last Date in which the message was modified.",
          "readOnly": true
        },
        "isRead": {
          "type": "boolean",
          "description": "Whether the user in context has read the message.",
          "readOnly": true
        },
        "postDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date in which the message was posted.",
          "readOnly": true
        },
        "editDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last Date in which the message was edited.",
          "readOnly": true
        }
      }
    },
    "UploadSettings": {
      "type": "object",
      "properties": {
        "maxUploadSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum size in bytes of a file uploaded via the Uploads API"
        },
        "displayRecommendedAlternatives": {
          "type": "boolean",
          "description": "Whether or not to recommend alternative storage solutions"
        },
        "recommendedAlternatives": {
          "type": "string",
          "description": "Recommended alternative storage solutions"
        },
        "displaySupportLink": {
          "type": "boolean",
          "description": "Whether or not to display support link"
        },
        "supportLink": {
          "type": "string",
          "description": "Personalized support link. Must be a complete and valid URL."
        }
      }
    },
    "UploadedFileInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary ID of the user.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "A secondary unique ID for the user.  Used by LTI launches and other inter-server operations.",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "An optional externally-defined unique ID for the user.  Defaults to the userName.\n\nFormerly known as 'batchUid'.",
          "maxLength": 256
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this user.  This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "userName": {
          "type": "string",
          "description": "The userName property, shown in the UI."
        },
        "studentId": {
          "type": "string",
          "description": "The user's student ID name or number as defined by the school or institution.",
          "maxLength": 100
        },
        "educationLevel": {
          "type": "string",
          "description": "The education level of this user.\n\n\n| Type      | Description\n | --------- | --------- |\n| K8 | Kindergarten through 8th grade |\n| HighSchool | Grades 9 through 12. |\n| Freshman | College or university freshman. |\n| Sophomore | College or university sophomore. |\n| Junior | College or university junior. |\n| Senior | College or university senior. |\n| GraduateSchool | Graduate school student. |\n| PostGraduateSchool | Post-graduate school student. |\n| Unknown | Education Level is not known, or not specified. |\n",
          "enum": [
            "K8",
            "HighSchool",
            "Freshman",
            "Sophomore",
            "Junior",
            "Senior",
            "GraduateSchool",
            "PostGraduateSchool",
            "Unknown"
          ]
        },
        "gender": {
          "type": "string",
          "description": "The gender of this user.\n\n\n| Type      | Description\n | --------- | --------- |\n| Female | Female |\n| Male | Male |\n| Other | Other  **Since**: 3900.32.0 |\n| Unknown | Gender is not known, or not specified. |\n",
          "enum": [
            "Female",
            "Male",
            "Other",
            "Unknown"
          ]
        },
        "pronouns": {
          "type": "string",
          "description": "The pronouns of this user.\n\n**Since**: 3900.27.0",
          "maxLength": 1000
        },
        "birthDate": {
          "type": "string",
          "format": "date-time",
          "description": "The birth date of this user. Only the date portion of this value has significance, since a person's birthdate represents a full day and not a moment in time. Take care to ignore the zeroed time portion when deserializing this value to ensure it's not converted to the previous calendar day if your local time zone has a negative UTC offset."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this user was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this user was last modified.",
          "readOnly": true
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "description": "The date this user last logged in.",
          "readOnly": true
        },
        "institutionRoleIds": {
          "type": "array",
          "description": "The primary and secondary institution roles assigned to this user. The primary institution role is the first item in the list, followed by all secondary institution roles sorted alphabetically.\n\n**Since**: 3300.3.0",
          "items": {
            "type": "string"
          }
        },
        "systemRoleIds": {
          "type": "array",
          "description": "The system roles (the administrative user roles in the UI) for this user.  The first role in this list is the user's primary system role, while the remaining are secondary system roles.",
          "items": {
            "$ref": "#/definitions/SystemRoleEnum"
          }
        },
        "availability": {
          "type": "object",
          "description": "Settings controlling availability of the user account.",
          "title": "Availability",
          "properties": {
            "available": {
              "type": "string",
              "description": "Whether the user is available within the system. Unavailable users cannot log in.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n| Disabled |   **Since**: 3100.0.0 |\n",
              "enum": [
                "Yes",
                "No",
                "Disabled"
              ]
            }
          }
        },
        "name": {
          "type": "object",
          "description": "Properties used to build the user's display name.",
          "title": "Name",
          "properties": {
            "given": {
              "type": "string",
              "description": "The given (first) name of this user.",
              "maxLength": 100
            },
            "family": {
              "type": "string",
              "description": "The family (last) name of this user.",
              "maxLength": 100
            },
            "middle": {
              "type": "string",
              "description": "The middle name of this user.",
              "maxLength": 100
            },
            "other": {
              "type": "string",
              "description": "The other name (nickname) of this user.",
              "maxLength": 100
            },
            "suffix": {
              "type": "string",
              "description": "The suffix of this user's name.  Examples: Jr., III, PhD.",
              "maxLength": 100
            },
            "title": {
              "type": "string",
              "description": "The title of this user.  Examples: Mr., Ms., Dr.",
              "maxLength": 100
            },
            "preferredDisplayName": {
              "type": "string",
              "description": "The preferred display name of this user.\n\n**Since**: 3900.48.0\n\n\n| Type      | Description\n | --------- | --------- |\n| GivenName | User requests displaying givenName when formatting names for display. This is the default behavior. |\n| OtherName | User requests displaying otherName when formatting names for display. |\n| Both | User requests displaying otherName and givenName when formatting names for display. |\n",
              "enum": [
                "GivenName",
                "OtherName",
                "Both"
              ]
            }
          }
        },
        "job": {
          "type": "object",
          "description": "The user's job information.",
          "title": "Job",
          "properties": {
            "title": {
              "type": "string",
              "description": "The user's job title.",
              "maxLength": 100
            },
            "department": {
              "type": "string",
              "description": "The department the user belongs to.",
              "maxLength": 100
            },
            "company": {
              "type": "string",
              "description": "The company the user works for.",
              "maxLength": 100
            }
          }
        },
        "contact": {
          "type": "object",
          "description": "The user's contact information.",
          "title": "Contact",
          "properties": {
            "homePhone": {
              "type": "string",
              "description": "The user's home phone number.",
              "maxLength": 50
            },
            "mobilePhone": {
              "type": "string",
              "description": "The user's mobile phone number.",
              "maxLength": 50
            },
            "businessPhone": {
              "type": "string",
              "description": "The user's business phone number.",
              "maxLength": 50
            },
            "businessFax": {
              "type": "string",
              "description": "The user's business fax number.",
              "maxLength": 50
            },
            "email": {
              "type": "string",
              "description": "The user's email address.",
              "maxLength": 100
            },
            "institutionEmail": {
              "type": "string",
              "description": "The user's institutional email address.\n\n**Since**: 3900.19.0",
              "maxLength": 254
            },
            "webPage": {
              "type": "string",
              "description": "The URL of the user's personal website.",
              "maxLength": 100
            }
          }
        },
        "address": {
          "type": "object",
          "description": "The user's mailing address.",
          "title": "Address",
          "properties": {
            "street1": {
              "type": "string",
              "description": "The street address of the user.",
              "maxLength": 100
            },
            "street2": {
              "type": "string",
              "description": "An additional field to store the street address of the user.",
              "maxLength": 100
            },
            "city": {
              "type": "string",
              "description": "The city the user resides in.",
              "maxLength": 50
            },
            "state": {
              "type": "string",
              "description": "The state or province the user resides in.",
              "maxLength": 50
            },
            "zipCode": {
              "type": "string",
              "description": "The zip code or postal code the user resides in.",
              "maxLength": 50
            },
            "country": {
              "type": "string",
              "description": "The country the user resides in.",
              "maxLength": 50
            }
          }
        },
        "locale": {
          "type": "object",
          "description": "The user's localization settings.",
          "title": "Locale",
          "properties": {
            "id": {
              "type": "string",
              "description": "The locale specified by the user.  This locale will be used anywhere the user is allowed to customize their locale; courses may force a specific locale, overriding the user's locale preference."
            },
            "calendar": {
              "type": "string",
              "description": "The calendar type specified by the user.\n\n\n| Type      | Description\n | --------- | --------- |\n| Gregorian | Gregorian |\n| GregorianHijri | Gregorian & Hijri |\n| Hijri | Hijri |\n| HijriGregorian | Hijri & Gregorian |\n",
              "enum": [
                "Gregorian",
                "GregorianHijri",
                "Hijri",
                "HijriGregorian"
              ]
            },
            "firstDayOfWeek": {
              "type": "string",
              "description": "The user's preferred first day of the week.\n\n\n| Type      | Description\n | --------- | --------- |\n| Sunday | Sunday |\n| Monday | Monday |\n| Saturday | Saturday |\n",
              "enum": [
                "Sunday",
                "Monday",
                "Saturday"
              ]
            }
          }
        },
        "avatar": {
          "type": "object",
          "description": "The user's avatar metadata\n\n**Since**: 3800.13.0",
          "title": "Avatar",
          "properties": {
            "viewUrl": {
              "type": "string",
              "description": "The location for retrieving the user's avatar\n\n**Since**: 3800.13.0",
              "readOnly": true
            },
            "source": {
              "type": "string",
              "description": "The source of the user's avatar\n\n**Since**: 3800.13.0\n\n\n| Type      | Description\n | --------- | --------- |\n| Default | The server default avatar |\n| User | The user set his/her own avatar |\n| System | A privileged user set the user's avatar to something other than default |\n",
              "enum": [
                "Default",
                "User",
                "System"
              ]
            },
            "uploadId": {
              "type": "string",
              "description": "The upload id of the avatar image file\n\n**Since**: 3800.13.0"
            }
          }
        },
        "pronunciation": {
          "type": "string",
          "description": "Pronunciation text for user's name\n\n**Since**: 3900.32.0"
        },
        "pronunciationAudio": {
          "type": "object",
          "description": "Pronunciation Audio file for user's name\n\n**Since**: 3900.32.0",
          "title": "PronunciationAudio",
          "properties": {
            "viewUrl": {
              "type": "string",
              "readOnly": true
            },
            "uploadId": {
              "type": "string"
            }
          }
        }
      }
    },
    "UserHierarchyNode": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "The primary ID of the Hierarchy Node",
          "readOnly": true
        },
        "node": {
          "description": "The hierarchy node of the node/user association.\n\nShown when adding the query parameter: \"expand=node\"",
          "$ref": "#/definitions/Node"
        },
        "userId": {
          "type": "string",
          "description": "The primary ID of the User",
          "readOnly": true
        }
      }
    },
    "UserMembership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of this course/user relationship.\n\n**Since**: 3700.14.0",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The primary ID of the user.",
          "readOnly": true
        },
        "courseId": {
          "type": "string",
          "description": "The primary ID of the course.",
          "readOnly": true
        },
        "course": {
          "description": "The course associated with the membership.\n\nShown when adding the query parameter: \"expand=course\". And can be filtered with the \"fields\" query parameter, for example \"fields=course.id,course.externalId\".\n\n**Since**: 3500.4.0",
          "$ref": "#/definitions/Course"
        },
        "childCourseId": {
          "type": "string",
          "description": "The primary ID of the child, cross-listed course, in which the user is directly enrolled. </p> This field is read only in Learn versions 3000.11.0 through 3400.0.0. As of 3400.1.0, this field is mutable.  </p> If this membership's course is a parent course in a cross-listed set, the childCourseId can be updated to move the membership enrollment between child courses and the parent course in  the set.  Patching the childCourseId to \"null\" will move the membership to the parent course.\n\n**Since**: 3000.11.0"
        },
        "dataSourceId": {
          "type": "string",
          "description": "The ID of the data source associated with this course.  This may optionally be the data source's externalId using the syntax \"externalId:math101\"."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was created.",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date this membership was modified.  A membership is considered modified only if an aspect of the membership itself changes (e.g.: availability or courseRoleId), and not if the Course or User alone is modified.\n\n**Since**: 3800.8.0",
          "readOnly": true
        },
        "availability": {
          "description": "Settings controlling availability of the course membership.",
          "$ref": "#/definitions/Availability"
        },
        "courseRoleId": {
          "type": "string",
          "description": "The user's role in the course.\n\nThese roles are also valid for an organization, although they are named differently in the UI.\n\nCustom course roles may also be referenced by their IDs.\n\n\n| Type      | Description\n | --------- | --------- |\n| Instructor | Has access to all areas in the Control Panel. This role is generally given to those developing, teaching, or facilitating the class. Instructors may access a course that is unavailable to students. This role is customizable and may have different capabilities from what is documented here. |\n| BbFacilitator | The facilitator is an instructor like role. Facilitators are restricted versions of an instructor, in that they are able to deliver course instruction and administer all aspects of a pre-constructed course, but are not allowed to modify or alter the course. This role is customizable and may have different capabilities from what is documented here. |\n| TeachingAssistant | The teaching assistant role is that of a co-teacher. Teaching assistants are able to administer all areas of a course. Their only limitations are those imposed by the instructor or Blackboard administrator at your school. This role is customizable and may have different capabilities from what is documented here. |\n| CourseBuilder | Manages the course without having access to student grades. This role is customizable and may have different capabilities from what is documented here. |\n| Grader | Assists the instructor in the creation, management, delivery, and grading of items. This role is customizable and may have different capabilities from what is documented here. |\n| Student |  |\n| Guest | Has no access to the Control Panel. Areas within the course are made available to guests, but typically they can only view course materials; they do not have access to tests or assessments, and do not have permission to post on discussion boards. This role's behavior is immutable. |\n",
          "enum": [
            "Instructor",
            "BbFacilitator",
            "TeachingAssistant",
            "CourseBuilder",
            "Grader",
            "Student",
            "Guest"
          ]
        },
        "bypassCourseAvailabilityUntil": {
          "type": "string",
          "format": "date-time",
          "description": "If present, this date signals that the user associated with this membership has special access to the course regardless of the course's availability setting prior to the moment specified by this field. After the date has passed, the membership will respect the course's availability.",
          "readOnly": true
        },
        "lastAccessed": {
          "type": "string",
          "format": "date-time",
          "description": "This date signals the date this membership was used; in other words, the last date the user accessed the associated course or content contained by that course.\n\nThe recording of any activity which would lead to this date getting updated does happen asynchronously in batches. So, there may be some delay between an activity which would update this value and the availability of the new date. It is recommended when using this value to note that activity within the last 5 minutes may not be taken into account.\n\n**Since**: 3300.9.0",
          "readOnly": true
        }
      }
    },
    "Version": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32",
          "description": "The 'major' version of this product.  Typically changes for releases with significant new features or breaking API changes."
        },
        "minor": {
          "type": "integer",
          "format": "int32",
          "description": "The 'minor' version of this product.  Typically changes for releases with minor feature updates."
        },
        "patch": {
          "type": "integer",
          "format": "int32",
          "description": "The 'patch' version of this product.  Typically changes for backwards-compatible hotfixes."
        },
        "build": {
          "type": "string",
          "description": "An internal identifier for the build artifact backing this version."
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "properties": {
        "learn": {
          "description": "The version of the Learn platform.",
          "$ref": "#/definitions/Version"
        }
      }
    }
  },
  "parameters": {
    "AllowChildCourseContent.allowChildCourseContent": {
      "name": "allowChildCourseContent",
      "in": "query",
      "description": "By default, child courses of a cross listed course can not have their contents modified.  The allowChildCourseContent parameter can be sent as true in order to bypass this validation.",
      "required": false,
      "type": "boolean"
    },
    "AttendanceRecordsSortCriteria.sort": {
      "name": "sort",
      "in": "query",
      "required": false,
      "type": "string"
    },
    "ChildCourseIdParam.childCourseId": {
      "name": "childCourseId",
      "in": "path",
      "description": "The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:math101                    |\n | courseId   | courseId:math101                      |\n | uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |\n ",
      "required": true,
      "type": "string"
    },
    "ContentCollectionResourceIdParam.resourceId": {
      "name": "resourceId",
      "in": "path",
      "description": "The xythos resource ID, formatted either as a primary ID or a xythos ID. <pre class=\"markdown\"> | ID type    | Example                                          | |------------|--------------------------------------------------| | primary    | _123_1                                           | | xid        | xid-123_1-1                                      | </pre> The home directory of a specified course is supported by the following syntax. <pre class=\"markdown\"> | ID type    | Example                                          | |------------|--------------------------------------------------| | primary    | ~course:_123_1                                   | | secondary  | ~course:courseId:theCourseId                     | | secondary  | ~course:externalId:theExternalId                 | | secondary  | ~course:uuid:theUuid                             | </pre> Similarly, the home directory of a specified user is supported as follows. <pre class=\"markdown\"> | ID type    | Example                                          | |------------|--------------------------------------------------| | primary    | ~user:_123_1                                     | | secondary  | ~user:userName:theUserName                       | | secondary  | ~user:externalId:theExternalId                   | | secondary  | ~user:uuid:theUuid                               | </pre> Resource IDs for home directory of the current user in context is supported as follows. \n\n | ID type    | Example                                          |\n |------------|--------------------------------------------------|\n | special    | ~                                                |\n | special    | ~user:me                                         |\n ",
      "required": true,
      "type": "string"
    },
    "ContentCollectionResourcesSearchCriteria.type": {
      "name": "type",
      "in": "query",
      "description": "Search for Resources whose Type matches the specified value.  Valid values are 'File' and 'Folder'.\n\n\n| Type      | Description\n | --------- | --------- |\n| File |  |\n| Folder |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "File",
        "Folder"
      ]
    },
    "ContentIdParam.contentId": {
      "name": "contentId",
      "in": "path",
      "description": "The Content ID.  This may be the primary ID, or any of the following keywords: interactive, indirect, root. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | keyword    | root                                  |\n ",
      "required": true,
      "type": "string"
    },
    "CourseIdParam.courseId": {
      "name": "courseId",
      "in": "path",
      "description": "The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:math101                    |\n | courseId   | courseId:math101                      |\n | uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |\n ",
      "required": true,
      "type": "string"
    },
    "CourseMeetingsSortCriteria.sort": {
      "name": "sort",
      "in": "query",
      "required": false,
      "type": "string"
    },
    "CourseMessageSearchCriteria.folderName": {
      "name": "folderName",
      "in": "query",
      "description": "Specifies the folder name of the custom folder",
      "required": false,
      "type": "string"
    },
    "CourseMessageSearchCriteria.folderType": {
      "name": "folderType",
      "in": "query",
      "description": "Specifies the folder type, The default type is inbox\n\n\n| Type      | Description\n | --------- | --------- |\n| Inbox |  |\n| Sent |  |\n| Delete |  |\n| Custom |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "Inbox",
        "Sent",
        "Delete",
        "Custom"
      ]
    },
    "CourseNodeFilterCriteriaV1.null.course.organization": {
      "name": "course.organization",
      "in": "query",
      "description": "Filters Hierarchy Node associations based on whether it is a Node-Course or a Node-Organization association. A value of 'true' indicates that search results should be limited to Node-Organization associations. A value of 'false' indicates results should be limited to Node-Course associations. Not setting this field indicates that both Node-Course and Node-Organization associations should be returned.",
      "required": false,
      "type": "boolean"
    },
    "CriterionIdParam.criterionId": {
      "name": "criterionId",
      "in": "path",
      "description": "The adaptive release criterion ID. This should be the primary ID. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n ",
      "required": true,
      "type": "string"
    },
    "DataSourceIdParam.dataSourceId": {
      "name": "dataSourceId",
      "in": "path",
      "description": "The data source ID.  This may be the primary ID, or the secondary ID prefixed with the ID type. \n\n | ID type    | Example            |\n |------------|--------------------|\n | primary    | _123_1             |\n | externalId | externalId:math101 |\n ",
      "required": true,
      "type": "string"
    },
    "DataSourceSearchCriteriaQueryParams.externalId": {
      "name": "externalId",
      "in": "query",
      "description": "The 'batchUid' value to use as search criteria.\n\nCurrently only supports 'contains' searches.",
      "required": false,
      "type": "string"
    },
    "DefaultRowBasedPagingParams.limit": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of results to be returned. There may be less if the query returned less than the maximum.",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "DefaultRowBasedPagingParams.offset": {
      "name": "offset",
      "in": "query",
      "description": "The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "DeleteGradesParam.deleteGrades": {
      "name": "deleteGrades",
      "in": "query",
      "description": "If true and there is a grade column associated with this content, that grade column will be marked as deleted.  All attempts and grades will also be removed. If false, the grade column will not be marked as deleted.  Attempts will not be deleted and grades will be converted to manually entered grades.  Defaults to false.",
      "required": false,
      "type": "boolean"
    },
    "DiscussionIdParam.discussionId": {
      "name": "discussionId",
      "in": "path",
      "description": "The discussion ID.  This may be the primary ID. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n ",
      "required": true,
      "type": "string"
    },
    "GradeColumnIdParam.columnId": {
      "name": "columnId",
      "in": "path",
      "description": "The grade column ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.  The ID may also be the keyword 'finalGrade', which indicates that the course's final grade column is specified. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:column1                    |\n | finalGrade | finalGrade                            |\n ",
      "required": true,
      "type": "string"
    },
    "GradeSchemaIdParam.schemaId": {
      "name": "schemaId",
      "in": "path",
      "description": "The grade schema ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:schema1                    |\n ",
      "required": true,
      "type": "string"
    },
    "GroupIdParam.groupId": {
      "name": "groupId",
      "in": "path",
      "description": "The group ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:breakfastClub              |\n ",
      "required": true,
      "type": "string"
    },
    "IgnoreCourseMergeEnrollmentErrors.ignoreEnrollmentErrors": {
      "name": "ignoreEnrollmentErrors",
      "in": "query",
      "description": "By default, enrollment errors encountered during a course merge will result in a 409 CONFLICT response.  The ignoreEnrollmentErrors parameter can be sent as true in order to bypass enrollment errors.",
      "required": false,
      "type": "boolean"
    },
    "LogLevel.level": {
      "name": "level",
      "in": "query",
      "description": ": Logs can be filtered with level. Default level is Error. Logs will be pulled of that level and above          i.e. for level = Warning result set will have warning and error level log messages",
      "required": false,
      "type": "string",
      "enum": [
        "Debug",
        "Information",
        "Warning",
        "Error"
      ]
    },
    "MessageIdParam.messageId": {
      "name": "messageId",
      "in": "path",
      "description": "The message ID.  This may be the primary ID. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n ",
      "required": true,
      "type": "string"
    },
    "NodeIdParam.nodeId": {
      "name": "nodeId",
      "in": "path",
      "description": "The node ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:breakfastClub              |\n \n ",
      "required": true,
      "type": "string"
    },
    "OAuth2AccessTokenRequestParam.code": {
      "name": "code",
      "in": "query",
      "description": "The authorization code granted by an end user for use by an application in Oauth2 Authorization Code Workflow",
      "required": false,
      "type": "string"
    },
    "OAuth2AccessTokenRequestParam.grant_type": {
      "name": "grant_type",
      "in": "query",
      "description": "The Grant Type. Acceptable values include: 'client_credentials', 'authorization_code' (since 3200.7.0), or 'refresh_token' (since 3200.7.0).",
      "required": false,
      "type": "string",
      "enum": [
        "client_credentials",
        "authorization_code",
        "refresh_token"
      ]
    },
    "OAuth2AuthorizationCodeRequestParam.client_id": {
      "name": "client_id",
      "in": "query",
      "description": "Required. The client identifier for the registered application.",
      "required": false,
      "type": "string"
    },
    "OAuth2AuthorizationCodeRequestParam.redirect_uri": {
      "name": "redirect_uri",
      "in": "query",
      "description": "the redirectUri to send the end user to once an authorization code response is made in Oauth2 Authorization Code Workflow",
      "required": false,
      "type": "string"
    },
    "OAuth2AuthorizationCodeRequestParam.response_type": {
      "name": "response_type",
      "in": "query",
      "description": "Required. The response_type expected which must to be set to \"code\"",
      "required": false,
      "type": "string"
    },
    "OAuth2AuthorizationCodeRequestParam.scope": {
      "name": "scope",
      "in": "query",
      "description": "the space delimited scope(s) being requested for this authorization. Example value: \"read write offline\"",
      "required": false,
      "type": "string"
    },
    "OAuth2AuthorizationCodeRequestParam.state": {
      "name": "state",
      "in": "query",
      "description": "Opaque value used by client to maintain state between request and callback. Used to prevent cross-site request forgery.",
      "required": false,
      "type": "string"
    },
    "ProctoringServicesSearchCriteriaV1.null.availability.available": {
      "name": "availability.available",
      "in": "query",
      "description": "Search for proctoring services with availability.available properties that contain this value.\n\n\n| Type      | Description\n | --------- | --------- |\n| Yes |  |\n| No |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "Yes",
        "No"
      ]
    },
    "ResourceIdParam.resourceId": {
      "name": "resourceId",
      "in": "path",
      "description": "The xythos resource ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                                          |\n |------------|--------------------------------------------------|\n | primary    | _123_1                                           |\n | xid        | xid-123_1-1                                      |\n ",
      "required": true,
      "type": "string"
    },
    "ResourceSearchCriteria.type": {
      "name": "type",
      "in": "query",
      "description": "Search for Resources whose Type matches the specified value.  Valid values are 'File' and 'Folder'.\n\n\n| Type      | Description\n | --------- | --------- |\n| File |  |\n| Folder |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "File",
        "Folder"
      ]
    },
    "RowBasedPagingParams.limit": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of results to be returned. There may be less if the query returned less than the maximum.",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "RowBasedPagingParams.offset": {
      "name": "offset",
      "in": "query",
      "description": "The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "RubricIdParam.rubricId": {
      "name": "rubricId",
      "in": "path",
      "description": "The Rubric ID. This may be the primary ID. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n ",
      "required": true,
      "type": "string"
    },
    "RubricsSearchCriteria.created": {
      "name": "created",
      "in": "query",
      "description": "Search for rubrics with a created date relative to this value.  'createdCompare' may also be sent to control search behavior.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "RubricsSearchCriteria.createdCompare": {
      "name": "createdCompare",
      "in": "query",
      "description": "Used alongside the 'created' search parameter. Defaults to greaterOrEqual if not specified.\n\n\n| Type      | Description\n | --------- | --------- |\n| lessThan |  |\n| greaterOrEqual |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "lessThan",
        "greaterOrEqual"
      ]
    },
    "RubricsSearchCriteria.modified": {
      "name": "modified",
      "in": "query",
      "description": "Search for rubrics with a modified date relative to this value.  'modifiedCompare' may also be sent to control search behavior.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "RubricsSearchCriteria.modifiedCompare": {
      "name": "modifiedCompare",
      "in": "query",
      "description": "Used alongside the 'modified' search parameter. Defaults to greaterOrEqual if not specified.\n\n\n| Type      | Description\n | --------- | --------- |\n| lessThan |  |\n| greaterOrEqual |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "lessThan",
        "greaterOrEqual"
      ]
    },
    "RubricsSortCriteria.sort": {
      "name": "sort",
      "in": "query",
      "description": "Properties to sort by. This is a comma-delimited list of JSON properties, with an optional \"(desc)\" suffix to request a descending sort for that property. e.g. \"title(desc),created\" Supported fields are:\n\n- id\n- created\n- modified\n- title\n- description\n- rubricType",
      "required": false,
      "type": "string"
    },
    "RuleIdParam.ruleId": {
      "name": "ruleId",
      "in": "path",
      "description": "The rule ID. This should be the primary ID. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n ",
      "required": true,
      "type": "string"
    },
    "TermIdParam.termId": {
      "name": "termId",
      "in": "path",
      "description": "The term ID.  This may be the primary ID, or the secondary ID prefixed with the ID type. \n\n | ID type    | Example                |\n |------------|------------------------|\n | primary    | _123_1                 |\n | externalId | externalId:spring.2016 |\n ",
      "required": true,
      "type": "string"
    },
    "UserIdParam.userId": {
      "name": "userId",
      "in": "path",
      "description": "The user ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type. \n\n | ID type    | Example                               |\n |------------|---------------------------------------|\n | primary    | _123_1                                |\n | externalId | externalId:jsmith                     |\n | userName   | userName:jsmith                       |\n | uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |\n ",
      "required": true,
      "type": "string"
    },
    "UsersSearchCriteria.modifiedCompare": {
      "name": "modifiedCompare",
      "in": "query",
      "description": "Used alongside the 'modified' search parameter.  Supported values:\n\n- lessThan\n- greaterOrEqual\nDefaults to greaterOrEqual if not specified.\n\n\n| Type      | Description\n | --------- | --------- |\n| lessThan |  |\n| greaterOrEqual |  |\n",
      "required": false,
      "type": "string",
      "enum": [
        "lessThan",
        "greaterOrEqual"
      ]
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.",
      "required": false,
      "type": "string"
    }
  }
}
